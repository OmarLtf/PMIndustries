{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\PMI PFA\\\\PMIndustries\\\\client\\\\src\\\\App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// import Login from \"./Components/Login page/login\";\n// import Navbar from \"./Components/NavBar/navBar\";\n// import { BrowserRouter, Route, Switch } from \"react-router-dom\";\n// import { LoginContext, GetUser } from \"./Helper/context\";\n// import { useState } from \"react\";\n// import Logout from \"./Components/Logout_Header/logout\";\n// import Bloquage from \"./Components/Update_Bloquage/Interface\";\n// import Users from \"./Components//Form/Form\";\n// import Demontage from \"./Components//Update_demontage/Interface\";\n// import Prep from \"./Components//Update_QP_QR/Interface\";\n// import Zinguage from \"./Components//Update_Zinguage/Interface\";\n// import Montage from \"./Components//Update_Montage/Interface\";\n// import Export from \"./Components//Update_Export/Interface\";\n// import Upload from \"./Components//Upload_file/upload\";\n// import Traceability from \"./Components//Traceability Table/Interface\";\nfunction App() {\n  // const [logedIn, setLogedIn] = useState(false);\n  // const [userData, setUserData] = useState({});\n  // setLogedIn(false);\n  // const [test, setTest] = useState(false);\n  // if (test === false) {\n  //   // <Login></Login>;\n  //   <h1>login page</h1>;\n  // } else {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"interface page\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }, this) // <BrowserRouter>\n  //   <LoginContext.Provider value={{ logedIn, setLogedIn }}>\n  //     <GetUser.Provider value={{ userData, setUserData }}>\n  //       <Logout></Logout>\n  //       <Navbar></Navbar>\n  //       <Switch>\n  //         <Route path=\"/interface/upload\" state={logedIn}>\n  //           <Upload></Upload>\n  //         </Route>\n  //         <Route path=\"/interface/utilisateur\">\n  //           <Users></Users>\n  //         </Route>\n  //         <Route path=\"/demontage\">\n  //           <Demontage></Demontage>\n  //         </Route>\n  //         <Route path=\"/preparation\">\n  //           <Prep></Prep>\n  //         </Route>\n  //         <Route path=\"/bloquage\">\n  //           <Bloquage></Bloquage>\n  //         </Route>\n  //         <Route path=\"/zinguage\">\n  //           <Zinguage></Zinguage>\n  //         </Route>\n  //         <Route path=\"/montage\">\n  //           <Montage></Montage>\n  //         </Route>\n  //         <Route path=\"/export\">\n  //           <Export></Export>\n  //         </Route>\n  //         <Route path=\"/traceability\">\n  //           <Traceability></Traceability>\n  //         </Route>\n  //       </Switch>\n  //     </GetUser.Provider>\n  //   </LoginContext.Provider>\n  // </BrowserRouter>\n  ;\n} // }\n\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App"],"sources":["C:/Users/pc/Desktop/PMI PFA/PMIndustries/client/src/App.js"],"sourcesContent":["// import Login from \"./Components/Login page/login\";\n// import Navbar from \"./Components/NavBar/navBar\";\n// import { BrowserRouter, Route, Switch } from \"react-router-dom\";\n// import { LoginContext, GetUser } from \"./Helper/context\";\n// import { useState } from \"react\";\n// import Logout from \"./Components/Logout_Header/logout\";\n// import Bloquage from \"./Components/Update_Bloquage/Interface\";\n// import Users from \"./Components//Form/Form\";\n// import Demontage from \"./Components//Update_demontage/Interface\";\n// import Prep from \"./Components//Update_QP_QR/Interface\";\n// import Zinguage from \"./Components//Update_Zinguage/Interface\";\n// import Montage from \"./Components//Update_Montage/Interface\";\n// import Export from \"./Components//Update_Export/Interface\";\n// import Upload from \"./Components//Upload_file/upload\";\n// import Traceability from \"./Components//Traceability Table/Interface\";\n\nfunction App() {\n  // const [logedIn, setLogedIn] = useState(false);\n  // const [userData, setUserData] = useState({});\n  // setLogedIn(false);\n  // const [test, setTest] = useState(false);\n  // if (test === false) {\n  //   // <Login></Login>;\n  //   <h1>login page</h1>;\n  // } else {\n    return (\n      <h1>interface page</h1>\n      // <BrowserRouter>\n      //   <LoginContext.Provider value={{ logedIn, setLogedIn }}>\n      //     <GetUser.Provider value={{ userData, setUserData }}>\n      //       <Logout></Logout>\n      //       <Navbar></Navbar>\n      //       <Switch>\n      //         <Route path=\"/interface/upload\" state={logedIn}>\n      //           <Upload></Upload>\n      //         </Route>\n      //         <Route path=\"/interface/utilisateur\">\n      //           <Users></Users>\n      //         </Route>\n      //         <Route path=\"/demontage\">\n      //           <Demontage></Demontage>\n      //         </Route>\n      //         <Route path=\"/preparation\">\n      //           <Prep></Prep>\n      //         </Route>\n      //         <Route path=\"/bloquage\">\n      //           <Bloquage></Bloquage>\n      //         </Route>\n      //         <Route path=\"/zinguage\">\n      //           <Zinguage></Zinguage>\n      //         </Route>\n      //         <Route path=\"/montage\">\n      //           <Montage></Montage>\n      //         </Route>\n      //         <Route path=\"/export\">\n      //           <Export></Export>\n      //         </Route>\n      //         <Route path=\"/traceability\">\n      //           <Traceability></Traceability>\n      //         </Route>\n      //       </Switch>\n      //     </GetUser.Provider>\n      //   </LoginContext.Provider>\n      // </BrowserRouter>\n    );\n  }\n// }\n\nexport default App;\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,GAAT,GAAe;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACE,oBACE;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF,CAEE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAtCF;AAwCD,C,CACH;;;KAlDSA,G;AAoDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}
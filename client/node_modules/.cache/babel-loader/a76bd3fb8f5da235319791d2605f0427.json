{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\PMI PFA\\\\PMIndustries\\\\client\\\\src\\\\Components\\\\Update_Bloquage\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"./Form.css\";\nimport Axios from \"axios\";\nimport GetTable from \"./GetTable\";\nimport { GetUser } from \"../../Helper/context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form() {\n  _s();\n\n  const [lot, setLot] = useState(\"\");\n  const [OF, setOF] = useState(\"\");\n  const [Qt_tr, setQtTr] = useState(\"\");\n  const [Qt_lib, setQtLib] = useState(\"\");\n  const [data, setData] = useState([]);\n\n  const getUsers = () => {\n    Axios.get(\"http://localhost:3001/data/new_inter\").then(res => {\n      setData(res.data);\n    });\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  const filter = rows => {\n    return rows.filter(rows => rows.OF.toString().toLowerCase().indexOf(OF) === 0 && rows.Lot.toString().toLowerCase().indexOf(lot) === 0);\n  };\n\n  const updateRow = () => {\n    const filteredData = filter(data);\n\n    if (filteredData.length === 1) {\n      if (Qt_lib !== null && Qt_tr !== null) {\n        var Qt_zinguage = parseInt(Qt_tr) - parseInt(Qt_lib) + parseInt(filteredData[0].Bloquage);\n        Axios.post(\"http://localhost:3001/bloquage/updaterow\", {\n          zinguage: Qt_zinguage,\n          id: filteredData[0].OF\n        });\n      }\n    } else window.alert(\"Choisir un seul ligne !\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"containor\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"formInter\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formCell\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Lot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: e => setLot(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formCell\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Ordre de Fabrication\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              required: true,\n              onChange: e => setOF(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Qunatit\\xE9 Transf\\xE9r\\xE9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              required: true,\n              onChange: e => setQtTr(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formCell\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Quantit\\xE9 Liber\\xE9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              required: true,\n              onChange: e => setQtLib(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Commentaire\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttonUpdate\",\n          onClick: updateRow,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GetTable, {\n      data: filter(data)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"lxuVETMsXbPCefDzKlJcSo9MMe4=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useEffect","useState","Axios","GetTable","GetUser","Form","lot","setLot","OF","setOF","Qt_tr","setQtTr","Qt_lib","setQtLib","data","setData","getUsers","get","then","res","filter","rows","toString","toLowerCase","indexOf","Lot","updateRow","filteredData","length","Qt_zinguage","parseInt","Bloquage","post","zinguage","id","window","alert","e","target","value"],"sources":["C:/Users/pc/Desktop/PMI PFA/PMIndustries/client/src/Components/Update_Bloquage/Form.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"./Form.css\";\r\nimport Axios from \"axios\";\r\nimport GetTable from \"./GetTable\";\r\nimport { GetUser } from \"../../Helper/context\";\r\n\r\nfunction Form() {\r\n  const [lot, setLot] = useState(\"\");\r\n  const [OF, setOF] = useState(\"\");\r\n  const [Qt_tr, setQtTr] = useState(\"\");\r\n  const [Qt_lib, setQtLib] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n\r\n  const getUsers = () => {\r\n    Axios.get(\"http://localhost:3001/data/new_inter\").then((res) => {\r\n      setData(res.data);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  const filter = (rows) => {\r\n    return rows.filter(\r\n      (rows) =>\r\n        rows.OF.toString().toLowerCase().indexOf(OF) === 0 &&\r\n        rows.Lot.toString().toLowerCase().indexOf(lot) === 0\r\n    );\r\n  };\r\n\r\n  const updateRow = () => {\r\n    const filteredData = filter(data);\r\n\r\n    if (filteredData.length === 1) {\r\n      if (Qt_lib !== null && Qt_tr !== null) {\r\n        var Qt_zinguage =\r\n          parseInt(Qt_tr) -\r\n          parseInt(Qt_lib) +\r\n          parseInt(filteredData[0].Bloquage);\r\n        Axios.post(\"http://localhost:3001/bloquage/updaterow\", {\r\n          zinguage: Qt_zinguage,\r\n          id: filteredData[0].OF,\r\n        });\r\n      }\r\n    } else window.alert(\"Choisir un seul ligne !\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"containor\">\r\n      <form className=\"formInter\">\r\n        <div>\r\n          <div className=\"formCell\">\r\n            <div className=\"field\">\r\n              <label>Lot</label>\r\n              <input type=\"text\" onChange={(e) => setLot(e.target.value)} />\r\n            </div>\r\n          </div>\r\n          <div className=\"formCell\">\r\n            <div className=\"field\">\r\n              <label>Ordre de Fabrication</label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                onChange={(e) => setOF(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"field\">\r\n              <label>Qunatité Transféré</label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                onChange={(e) => setQtTr(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"formCell\">\r\n            <div className=\"field\">\r\n              <label>Quantité Liberé</label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                onChange={(e) => setQtLib(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"field\">\r\n              <label>Commentaire</label>\r\n              <input type=\"text\" />\r\n            </div>\r\n          </div>\r\n          <button className=\"buttonUpdate\" onClick={updateRow}>\r\n            Update\r\n          </button>\r\n        </div>\r\n      </form>\r\n      <GetTable data={filter(data)} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
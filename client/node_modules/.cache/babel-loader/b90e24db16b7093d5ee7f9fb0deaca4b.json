{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\PMI PFA\\\\PMIndustries\\\\client\\\\src\\\\Components\\\\Upload_file\\\\upload.js\";\nimport React, { useState } from \"react\";\nimport \"./upload.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction upload() {\n  const handleFile = e => {\n    let selectedFile = e.target.files[0];\n\n    if (selectedFile) {\n      // console.log(selectedFile.type);\n      if (selectedFile && fileType.includes(selectedFile.type)) {\n        let reader = new FileReader();\n        reader.readAsArrayBuffer(selectedFile);\n\n        reader.onload = e => {\n          setExcelFileError(null);\n          setExcelFile(e.target.result);\n        };\n      } else {\n        setExcelFileError(\"Please select only excel file types\");\n        setExcelFile(null);\n      }\n    } else {\n      console.log(\"plz select your file\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"interfaceContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"formInter\",\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Upload Excel file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"form-control\",\n          onChange: handleFile,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttonUpload\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\nexport default upload;","map":{"version":3,"names":["React","useState","upload","handleFile","e","selectedFile","target","files","fileType","includes","type","reader","FileReader","readAsArrayBuffer","onload","setExcelFileError","setExcelFile","result","console","log"],"sources":["C:/Users/pc/Desktop/PMI PFA/PMIndustries/client/src/Components/Upload_file/upload.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./upload.css\";\r\n\r\nfunction upload() {\r\n  const handleFile = (e) => {\r\n  \r\n\r\n    let selectedFile = e.target.files[0];\r\n    if (selectedFile) {\r\n      // console.log(selectedFile.type);\r\n      if (selectedFile && fileType.includes(selectedFile.type)) {\r\n        let reader = new FileReader();\r\n        reader.readAsArrayBuffer(selectedFile);\r\n        reader.onload = (e) => {\r\n          setExcelFileError(null);\r\n          setExcelFile(e.target.result);\r\n        };\r\n      } else {\r\n        setExcelFileError(\"Please select only excel file types\");\r\n        setExcelFile(null);\r\n      }\r\n    } else {\r\n      console.log(\"plz select your file\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"interfaceContainer\">\r\n      <div className=\"form\">\r\n        <form className=\"formInter\" autoComplete=\"off\">\r\n          {/* onSubmit={handleSubmit}> */}\r\n          <label>\r\n            <h5>Upload Excel file</h5>\r\n          </label>\r\n          <br></br>\r\n          <input\r\n            type=\"file\"\r\n            className=\"form-control\"\r\n            onChange={handleFile}\r\n            required\r\n          ></input>\r\n          <button className=\"buttonUpload\">Submit</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default upload;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,cAAP;;;AAEA,SAASC,MAAT,GAAkB;EAChB,MAAMC,UAAU,GAAIC,CAAD,IAAO;IAGxB,IAAIC,YAAY,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAnB;;IACA,IAAIF,YAAJ,EAAkB;MAChB;MACA,IAAIA,YAAY,IAAIG,QAAQ,CAACC,QAAT,CAAkBJ,YAAY,CAACK,IAA/B,CAApB,EAA0D;QACxD,IAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;QACAD,MAAM,CAACE,iBAAP,CAAyBR,YAAzB;;QACAM,MAAM,CAACG,MAAP,GAAiBV,CAAD,IAAO;UACrBW,iBAAiB,CAAC,IAAD,CAAjB;UACAC,YAAY,CAACZ,CAAC,CAACE,MAAF,CAASW,MAAV,CAAZ;QACD,CAHD;MAID,CAPD,MAOO;QACLF,iBAAiB,CAAC,qCAAD,CAAjB;QACAC,YAAY,CAAC,IAAD,CAAZ;MACD;IACF,CAbD,MAaO;MACLE,OAAO,CAACC,GAAR,CAAY,sBAAZ;IACD;EACF,CApBD;;EAsBA,oBACE;IAAK,SAAS,EAAC,oBAAf;IAAA,uBACE;MAAK,SAAS,EAAC,MAAf;MAAA,uBACE;QAAM,SAAS,EAAC,WAAhB;QAA4B,YAAY,EAAC,KAAzC;QAAA,wBAEE;UAAA,uBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAFF,eAKE;UAAA;UAAA;UAAA;QAAA,QALF,eAME;UACE,IAAI,EAAC,MADP;UAEE,SAAS,EAAC,cAFZ;UAGE,QAAQ,EAAEhB,UAHZ;UAIE,QAAQ;QAJV;UAAA;UAAA;UAAA;QAAA,QANF,eAYE;UAAQ,SAAS,EAAC,cAAlB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAZF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD;;AAED,eAAeD,MAAf"},"metadata":{},"sourceType":"module"}
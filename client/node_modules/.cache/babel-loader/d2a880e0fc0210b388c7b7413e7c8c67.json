{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\PMI PFA\\\\PMIndustries\\\\client\\\\src\\\\Components\\\\Upload_file\\\\upload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./upload.css\";\nimport * as XLSX from \"xlsx\";\nimport GetTable from \"./GetTable\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Upload() {\n  _s();\n\n  // on change states\n  const [excelFile, setExcelFile] = useState(null);\n  const [excelFileError, setExcelFileError] = useState(null); // submit\n\n  const [excelData, setExcelData] = useState(null); // it will contain array of objects\n  // handle File\n\n  const handleFile = e => {\n    let selectedFile = e.target.files[0];\n\n    if (selectedFile) {\n      let reader = new FileReader();\n      reader.readAsArrayBuffer(selectedFile);\n\n      reader.onload = e => {\n        setExcelFileError(null);\n        setExcelFile(e.target.result);\n      };\n    } else {\n      console.log(\"plz select your file\");\n    }\n  }; // submit function\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"exel file\");\n    console.log(excelFile);\n\n    if (excelFile !== null) {\n      const workbook = XLSX.read(excelFile, {\n        type: \"buffer\"\n      });\n      const worksheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[worksheetName];\n      const data = XLSX.utils.sheet_to_json(worksheet);\n      setExcelData(data);\n\n      if (excelData) {\n        console.log(excelData);\n        Axios.post(\"http://localhost:3001/excelUpload\", {\n          excelData: excelData.slice(0, 5)\n        });\n      }\n    } else {\n      setExcelData(null);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"interfaceContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"formInter\",\n        autoComplete: \"off\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"title\",\n            children: \"Upload Excel file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"form-control\",\n          onChange: handleFile,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), excelFileError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-danger\",\n          style: {\n            marginTop: 5 + \"px\"\n          },\n          children: excelFileError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttonUpload\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Upload, \"ssAJ0QlsebuERbnoOnSKH1Zj/uE=\");\n\n_c = Upload;\nexport default Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useState","XLSX","GetTable","Axios","Upload","excelFile","setExcelFile","excelFileError","setExcelFileError","excelData","setExcelData","handleFile","e","selectedFile","target","files","reader","FileReader","readAsArrayBuffer","onload","result","console","log","handleSubmit","preventDefault","workbook","read","type","worksheetName","SheetNames","worksheet","Sheets","data","utils","sheet_to_json","post","slice","marginTop"],"sources":["C:/Users/pc/Desktop/PMI PFA/PMIndustries/client/src/Components/Upload_file/upload.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./upload.css\";\r\nimport * as XLSX from \"xlsx\";\r\nimport GetTable from \"./GetTable\";\r\nimport Axios from \"axios\";\r\nfunction Upload() {\r\n  // on change states\r\n  const [excelFile, setExcelFile] = useState(null);\r\n  const [excelFileError, setExcelFileError] = useState(null);\r\n\r\n  // submit\r\n  const [excelData, setExcelData] = useState(null);\r\n  // it will contain array of objects\r\n\r\n  // handle File\r\n\r\n  const handleFile = (e) => {\r\n    let selectedFile = e.target.files[0];\r\n    if (selectedFile) {\r\n      let reader = new FileReader();\r\n      reader.readAsArrayBuffer(selectedFile);\r\n      reader.onload = (e) => {\r\n        setExcelFileError(null);\r\n        setExcelFile(e.target.result);\r\n      };\r\n    } else {\r\n      console.log(\"plz select your file\");\r\n    }\r\n  };\r\n\r\n  // submit function\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"exel file\");\r\n    console.log(excelFile);\r\n    if (excelFile !== null) {\r\n      const workbook = XLSX.read(excelFile, { type: \"buffer\" });\r\n      const worksheetName = workbook.SheetNames[0];\r\n      const worksheet = workbook.Sheets[worksheetName];\r\n      const data = XLSX.utils.sheet_to_json(worksheet);\r\n      setExcelData(data);\r\n      if (excelData) {\r\n        console.log(excelData);\r\n        Axios.post(\"http://localhost:3001/excelUpload\", {\r\n          excelData: excelData.slice(0, 5),\r\n        });\r\n      }\r\n    } else {\r\n      setExcelData(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"interfaceContainer\">\r\n      <div className=\"form\">\r\n        <form className=\"formInter\" autoComplete=\"off\" onSubmit={handleSubmit}>\r\n          <label>\r\n            <h5 className=\"title\">Upload Excel file</h5>\r\n          </label>\r\n          <br></br>\r\n          <input\r\n            type=\"file\"\r\n            className=\"form-control\"\r\n            onChange={handleFile}\r\n            required\r\n          ></input>\r\n          {excelFileError && (\r\n            <div className=\"text-danger\" style={{ marginTop: 5 + \"px\" }}>\r\n              {excelFileError}\r\n            </div>\r\n          )}\r\n          <button className=\"buttonUpload\">Submit</button>\r\n        </form>\r\n        {/* {excelData ? <GetTable data={excelData} /> : <h1>No data</h1>} */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Upload;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
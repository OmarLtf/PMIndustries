[{"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\index.js":"1","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\App.js":"2","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Login page\\login.js":"3","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Form\\Form.js":"4","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\NavBar\\nav.js":"5","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\table\\GetTable.js":"6","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\table\\Table.js":"7","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Zinguage\\Interface.js":"8","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Zinguage\\GetTable.js":"9","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Zinguage\\Form.js":"10","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Bloquage\\Interface.js":"11","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Bloquage\\Form.js":"12","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Bloquage\\GetTable.js":"13","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Montage\\Interface.js":"14","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Montage\\GetTable.js":"15","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Montage\\Form.js":"16","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_demontage\\Interface.js":"17","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_demontage\\Form.js":"18","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_demontage\\GetTable.js":"19","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Export\\Interface.js":"20","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Export\\Form.js":"21","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Export\\GetTable.js":"22","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Users_table\\users.js":"23","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\table\\users_table.js":"24","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\NavBar\\navBarTest.js":"25","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\NavBar\\navBar.js":"26","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_QP_QR\\Interface.js":"27","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_QP_QR\\Form.js":"28","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_QP_QR\\GetTable.js":"29","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Form\\GetTable.js":"30","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Form\\users_table.js":"31","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Helper\\context.js":"32","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Upload_file\\upload.js":"33","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Logout_Header\\logout.js":"34","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Traceability Table\\Interface.js":"35","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Traceability Table\\Form.js":"36"},{"size":174,"mtime":1662144547395,"results":"37","hashOfConfig":"38"},{"size":2260,"mtime":1662345199890,"results":"39","hashOfConfig":"38"},{"size":2203,"mtime":1662345499016,"results":"40","hashOfConfig":"38"},{"size":2548,"mtime":1662299278229,"results":"41","hashOfConfig":"38"},{"size":478,"mtime":1662146171473,"results":"42","hashOfConfig":"38"},{"size":681,"mtime":1661108150033,"results":"43","hashOfConfig":"38"},{"size":791,"mtime":1661710722495,"results":"44","hashOfConfig":"38"},{"size":243,"mtime":1660837200203,"results":"45","hashOfConfig":"38"},{"size":1327,"mtime":1662321725361,"results":"46","hashOfConfig":"38"},{"size":3641,"mtime":1662347705429,"results":"47","hashOfConfig":"38"},{"size":243,"mtime":1661709284101,"results":"48","hashOfConfig":"38"},{"size":4301,"mtime":1662335601275,"results":"49","hashOfConfig":"38"},{"size":1327,"mtime":1662321669038,"results":"50","hashOfConfig":"38"},{"size":243,"mtime":1661709338320,"results":"51","hashOfConfig":"38"},{"size":1327,"mtime":1662321693714,"results":"52","hashOfConfig":"38"},{"size":4385,"mtime":1662335635790,"results":"53","hashOfConfig":"38"},{"size":243,"mtime":1661709302325,"results":"54","hashOfConfig":"38"},{"size":3199,"mtime":1662322156465,"results":"55","hashOfConfig":"38"},{"size":1327,"mtime":1662321459934,"results":"56","hashOfConfig":"38"},{"size":243,"mtime":1661709347029,"results":"57","hashOfConfig":"38"},{"size":4081,"mtime":1662335654246,"results":"58","hashOfConfig":"38"},{"size":1327,"mtime":1662321682071,"results":"59","hashOfConfig":"38"},{"size":307,"mtime":1661699320920,"results":"60","hashOfConfig":"38"},{"size":1385,"mtime":1661709689885,"results":"61","hashOfConfig":"38"},{"size":2852,"mtime":1662141445735,"results":"62","hashOfConfig":"38"},{"size":3742,"mtime":1662347762802,"results":"63","hashOfConfig":"38"},{"size":363,"mtime":1660318117846,"results":"64","hashOfConfig":"38"},{"size":3847,"mtime":1662327876938,"results":"65","hashOfConfig":"38"},{"size":1327,"mtime":1662321706248,"results":"66","hashOfConfig":"38"},{"size":681,"mtime":1661719774818,"results":"67","hashOfConfig":"38"},{"size":1318,"mtime":1662315894396,"results":"68","hashOfConfig":"38"},{"size":201,"mtime":1662344179047,"results":"69","hashOfConfig":"38"},{"size":2026,"mtime":1662347722793,"results":"70","hashOfConfig":"38"},{"size":844,"mtime":1662206957245,"results":"71","hashOfConfig":"38"},{"size":170,"mtime":1662067571716,"results":"72","hashOfConfig":"38"},{"size":2344,"mtime":1662156773986,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},"177r9lg",{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"77"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"77"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"77"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"77"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"77"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"77"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"77"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"77"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"77"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"77"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"77"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"77"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"77"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"77"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"77"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"77"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"77"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"77"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"77"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"77"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"77"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"77"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"77"},"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\index.js",["164"],"import ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(<App></App>, document.getElementById(\"root\"));\n",["165","166"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\App.js",["167","168","169","170","171","172","173"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Login page\\login.js",["174","175","176","177"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Form\\Form.js",["178","179"],"import { useContext, useEffect, useState } from \"react\";\r\nimport \"./Form.css\";\r\nimport Axios from \"axios\";\r\nimport Table from \"./GetTable\";\r\nfunction Form(props) {\r\n  const [matricule, setMatricule] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const addUser = (e) => {\r\n    e.preventDefault();\r\n    Axios.post(\"http://localhost:3001/adduser\", {\r\n      userName: name,\r\n      matricule: matricule,\r\n      role: role,\r\n      password: password,\r\n    }).then((response) => {\r\n      console.log(response);\r\n    });\r\n    window.location.reload(false);\r\n    clearFields();\r\n  };\r\n  // useEffect(() => {\r\n  //   setLogedIn(true);\r\n  // });\r\n\r\n  const clearFields = () => {\r\n    setMatricule(\"\");\r\n    setRole(\"\");\r\n    setPassword(\"\");\r\n    setName(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"interfaceContainer\">\r\n      <form className=\"formTestTest\">\r\n        <div className=\"formCell\">\r\n          <div>\r\n            <label>Matricule</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              value={matricule}\r\n              onChange={(e) => setMatricule(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Nom Complet</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"formCell\">\r\n          <div>\r\n            <label>Role</label>\r\n            <select value={role} onChange={(e) => setRole(e.target.value)}>\r\n              <option>Choisir une role</option>\r\n              <option>Administrateur</option>\r\n              <option>Chef production</option>\r\n              <option>Chef ilot</option>\r\n              <option>Consultant</option>\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label>Mot de pass</label>\r\n            <input\r\n              type=\"password\"\r\n              required\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <button className=\"buttonEnvoyer\" onClick={addUser}>\r\n            Envoyer\r\n          </button>\r\n          <button className=\"buttonAnnuler\" onClick={clearFields}>\r\n            Annuler\r\n          </button>\r\n        </div>\r\n      </form>\r\n      <Table></Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\NavBar\\nav.js",["180","181","182"],"import { Redirect, Rout } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport Nav from \"./navBarTest\";\r\nimport \"./interface.css\";\r\n\r\nfunction nav(props) {\r\n  // if (!props.state) {\r\n  //   return <Redirect to=\"/login\"></Redirect>;\r\n  // }\r\n  return (\r\n    <BrowserRouter>\r\n      {/* <Redirect to=\"/interface/utilisateur\"></Redirect> */}\r\n      <Nav></Nav>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default nav;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\table\\GetTable.js",[],["183","184"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\table\\Table.js",[],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Zinguage\\Interface.js",["185","186"],"import Form from \"./Form\";\r\nimport GetTable from \"./GetTable\";\r\nimport Navbar from \"../NavBar/nav\";\r\nimport \"./Interface.css\";\r\n\r\nfunction Interface() {\r\n  return (\r\n    <div>\r\n      <Form />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Interface;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Zinguage\\GetTable.js",["187","188","189"],"import { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Table from \"../table/Table\";\r\nimport \"./table.css\";\r\n\r\nfunction GetTable(props) {\r\n  const column = [\r\n    { heading: \"OF\", value: \"OF\" },\r\n    { heading: \"Lot\", value: \"Lot\" },\r\n    { heading: \"Produit\", value: \"Produit\" },\r\n    { heading: \"Référence\", value: \"R_f_rence\" },\r\n    { heading: \"Référence Sorea\", value: \"R_f_rence_Sorea\" },\r\n    { heading: \"Date de commande\", value: \"Date_De_Commande\" },\r\n    { heading: \"Qt Ddée\", value: \"Qt_Dd_e\" },\r\n    { heading: \"Démontage\", value: \"D_montage\" },\r\n    { heading: \"Qt Préparé\", value: \"Qt_prepare\" },\r\n    { heading: \"R.pre\", value: \"Qt_Rebut\" },\r\n    { heading: \"Zingueur\", value: \"Zingueur\" },\r\n    { heading: \"Montage\", value: \"Montage\" },\r\n    { heading: \"Bloquage\", value: \"Bloquage\" },\r\n    { heading: \"R.Montage\", value: \"Rbut_montage\" },\r\n    { heading: \"Qt Exporté\", value: \"Qt_Export\" },\r\n    { heading: \"R.Export\", value: \"Rbut_export\" },\r\n    { heading: \"E.Brut\", value: \"Encours_Atelier_Brut\" },\r\n    { heading: \"E.Net\", value: \"Encours_Atelier_Net\" },\r\n    { heading: \"Observation Prod\", value: \"Observation_Prod\" },\r\n    { heading: \"Taux de Rebut\", value: \"Taux_de_Rebut\" },\r\n  ];\r\n  return <Table data={props.data} column={column} />;\r\n}\r\n\r\nexport default GetTable;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Zinguage\\Form.js",["190","191"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Bloquage\\Interface.js",["192","193"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Bloquage\\Form.js",["194","195","196"],"import { useContext, useEffect, useState } from \"react\";\r\nimport \"./Form.css\";\r\nimport Axios from \"axios\";\r\nimport GetTable from \"./GetTable\";\r\nimport { GetUser } from \"../../Helper/context\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nfunction Form(props) {\r\n  const [lot, setLot] = useState(\"\");\r\n  const [OF, setOF] = useState(\"\");\r\n  const [Qt_tr, setQtTr] = useState(\"\");\r\n  const [Qt_lib, setQtLib] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n  const [com, setCom] = useState(\"\");\r\n\r\n  var retrievedObject = localStorage.getItem(\"object\");\r\n  const userData = JSON.parse(retrievedObject);\r\n\r\n  const getUsers = () => {\r\n    Axios.get(\"http://localhost:3001/data/new_inter\").then((res) => {\r\n      setData(res.data);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  const filter = (rows) => {\r\n    return rows.filter(\r\n      (rows) =>\r\n        rows.OF.toString().toLowerCase().indexOf(OF) === 0 &&\r\n        rows.Lot.toString().toLowerCase().indexOf(lot) === 0\r\n    );\r\n  };\r\n\r\n  const updateRow = () => {\r\n    const filteredData = filter(data);\r\n\r\n    if (filteredData.length === 1) {\r\n      if (Qt_lib !== null && Qt_tr !== null) {\r\n        var Qt_zinguage = parseInt(Qt_tr) - parseInt(Qt_lib);\r\n        var zinguage_totale = Qt_zinguage + parseInt(filteredData[0].Bloquage);\r\n        var qt_mont =\r\n          parseInt(filteredData[0].Montage) -\r\n          parseInt(filteredData[0].Rbut_montage);\r\n\r\n        let som_reb =\r\n          parseInt(filteredData[0].Qt_Rebut) +\r\n          parseInt(filteredData[0].Rebut_montage) +\r\n          parseInt(filteredData[0].Rebut_export);\r\n\r\n        let encoursNet =\r\n          parseInt(filteredData[0].D_montage) -\r\n          parseInt(filteredData[0].Zingueur) -\r\n          parseInt(filteredData[0].Bloquage) -\r\n          som_reb;\r\n\r\n        if (zinguage_totale <= qt_mont) {\r\n          Axios.post(\"http://localhost:3001/bloquage/updaterow\", {\r\n            zinguage: Qt_zinguage,\r\n            id: filteredData[0].OF,\r\n            encoursNet: encoursNet,\r\n            /////traceability///////\r\n            matricule: userData.matricule,\r\n            user: userData.name,\r\n            produit: filteredData[0].Produit,\r\n            lot: filteredData[0].Lot,\r\n            ref: filteredData[0].R_f_rence,\r\n            table: \"Bloquage\",\r\n            input_transfer: Qt_tr,\r\n            input_libere: Qt_lib,\r\n            comentaire: com,\r\n          });\r\n        } else {\r\n          window.alert(\"Bloquage supérieur a quantité préparé !\");\r\n        }\r\n      }\r\n    } else window.alert(\"Choisir un seul ligne !\");\r\n  };\r\n  // if (!props.state) {\r\n  //   return <Redirect path=\"/login\"></Redirect>;\r\n  // }\r\n  return (\r\n    <div className=\"containor\">\r\n      <form className=\"formInter\">\r\n        <div>\r\n          <div className=\"formCell\">\r\n            <div className=\"field\">\r\n              <label>Lot</label>\r\n              <input type=\"text\" onChange={(e) => setLot(e.target.value)} />\r\n            </div>\r\n          </div>\r\n          <div className=\"formCell\">\r\n            <div className=\"field\">\r\n              <label>Ordre de Fabrication</label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                onChange={(e) => setOF(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"field\">\r\n              <label>Qunatité Transféré</label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                onChange={(e) => setQtTr(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"formCell\">\r\n            <div className=\"field\">\r\n              <label>Quantité Liberé</label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                onChange={(e) => setQtLib(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"field\">\r\n              <label>Commentaire</label>\r\n              <input type=\"text\" onChange={(e) => setCom(e.target.value)} />\r\n            </div>\r\n          </div>\r\n          <button className=\"buttonUpdate\" onClick={updateRow}>\r\n            Update\r\n          </button>\r\n        </div>\r\n      </form>\r\n      <GetTable data={filter(data)} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Bloquage\\GetTable.js",["197","198","199"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Montage\\Interface.js",["200","201"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Montage\\GetTable.js",["202","203","204"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Montage\\Form.js",["205","206"],"import { useContext, useEffect, useState } from \"react\";\r\nimport \"./Form.css\";\r\nimport Axios from \"axios\";\r\nimport GetTable from \"./GetTable\";\r\nimport { GetUser } from \"../../Helper/context\";\r\n\r\nfunction Form() {\r\n  const [lot, setLot] = useState(\"\");\r\n  const [OF, setOF] = useState(\"\");\r\n  const [montage, setMontage] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n  const [rebut, setRebut] = useState(\"\");\r\n  const [com, setCom] = useState(\"\");\r\n\r\n  var retrievedObject = localStorage.getItem(\"object\");\r\n  const userData = JSON.parse(retrievedObject);\r\n\r\n  const getUsers = () => {\r\n    Axios.get(\"http://localhost:3001/data/new_inter\").then((res) => {\r\n      setData(res.data);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  const filter = (rows) => {\r\n    return rows.filter(\r\n      (rows) =>\r\n        rows.OF.toString().toLowerCase().indexOf(OF) === 0 &&\r\n        rows.Lot.toString().toLowerCase().indexOf(lot) === 0\r\n    );\r\n  };\r\n\r\n  const updateRow = () => {\r\n    const filteredData = filter(data);\r\n\r\n    if (filteredData.length === 1) {\r\n      if (montage !== null && rebut !== null) {\r\n        let qt_prep = parseInt(filteredData[0].Qt_prepare);\r\n        let reb_prep = parseInt(filteredData[0].Qt_Rebut);\r\n        let zing = parseInt(filteredData[0].Zingueur);\r\n        let test = qt_prep - reb_prep - zing;\r\n        let qt_mont = parseInt(montage) + parseInt(filteredData[0].Montage);\r\n        console.log(\"quantité montage\");\r\n\r\n        if (qt_mont <= test && test !== 0) {\r\n          let som_reb =\r\n            parseInt(filteredData[0].Qt_Rebut) +\r\n            parseInt(filteredData[0].Rebut_montage) +\r\n            parseInt(filteredData[0].Rebut_export);\r\n\r\n          let finalMontage =\r\n            parseInt(filteredData[0].Montage) +\r\n            parseInt(montage) -\r\n            parseInt(rebut);\r\n\r\n          let encoursBrut = parseInt(filteredData[0].D_montage) - finalMontage;\r\n\r\n          let encoursNet =\r\n            parseInt(filteredData[0].D_montage) -\r\n            parseInt(filteredData[0].Zingueur) -\r\n            parseInt(filteredData[0].Bloquage) -\r\n            som_reb;\r\n\r\n          Axios.post(\"http://localhost:3001/montage/updaterow\", {\r\n            montage: qt_mont,\r\n            encoursBrut: encoursBrut,\r\n            encoursNet: encoursNet,\r\n            id: filteredData[0].OF,\r\n            /////traceability///////\r\n            matricule: userData.matricule,\r\n            user: userData.name,\r\n            produit: filteredData[0].Produit,\r\n            lot: filteredData[0].Lot,\r\n            ref: filteredData[0].R_f_rence,\r\n            table: \"Montage\",\r\n            input_rebut: rebut,\r\n            input_montage: montage,\r\n            comentaire: com,\r\n          });\r\n        } else {\r\n          window.alert(\"valeurs invalides !\");\r\n        }\r\n      }\r\n    } else window.alert(\"Choisir un seul ligne !\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"containor\">\r\n      <form className=\"formInter\">\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Lot</label>\r\n            <input type=\"text\" onChange={(e) => setLot(e.target.value)} />\r\n          </div>\r\n        </div>\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Ordre de Fabrication</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setOF(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Quantité monté</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setMontage(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Champ Rebut</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setRebut(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Commentaire</label>\r\n            <input type=\"text\" onChange={(e) => setCom(e.target.value)} />\r\n          </div>\r\n        </div>\r\n        <button className=\"buttonUpdate\" onClick={updateRow}>\r\n          Update\r\n        </button>\r\n      </form>\r\n      <GetTable data={filter(data)} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_demontage\\Interface.js",["207","208"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_demontage\\Form.js",["209","210","211"],"import { useContext, useEffect, useState } from \"react\";\r\nimport \"./Form.css\";\r\nimport Axios from \"axios\";\r\nimport GetTable from \"./GetTable\";\r\nimport { GetUser } from \"../../Helper/context\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nfunction Form(props) {\r\n  const [lot, setLot] = useState(\"\");\r\n  const [OF, setOF] = useState(\"\");\r\n  const [cd, setCd] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n  const [com, setCom] = useState(\"\");\r\n\r\n  var retrievedObject = localStorage.getItem(\"object\");\r\n  const userData = JSON.parse(retrievedObject);\r\n\r\n  const getUsers = () => {\r\n    Axios.get(\"http://localhost:3001/data/new_inter\").then((res) => {\r\n      setData(res.data);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  const filter = (rows) => {\r\n    return rows.filter(\r\n      (rows) =>\r\n        rows.OF.toString().toLowerCase().indexOf(OF) === 0 &&\r\n        rows.Lot.toString().toLowerCase().indexOf(lot) === 0\r\n    );\r\n  };\r\n\r\n  const updateRow = () => {\r\n    const filteredData = filter(data);\r\n    if (filteredData.length === 1) {\r\n      if (cd !== null) {\r\n        let Qt_demantage = 0;\r\n        if (filteredData[0].D_montage) {\r\n          Qt_demantage = parseInt(cd) + parseInt(filteredData[0].D_montage);\r\n        } else {\r\n          Qt_demantage = parseInt(cd);\r\n        }\r\n        Axios.post(\"http://localhost:3001/demantage/updaterow\", {\r\n          demantage: Qt_demantage,\r\n          id: filteredData[0].OF,\r\n          /////traceability///////\r\n          matricule: userData.matricule,\r\n          user: userData.name,\r\n          produit: filteredData[0].Produit,\r\n          lot: filteredData[0].Lot,\r\n          ref: filteredData[0].R_f_rence,\r\n          table: \"Demantage\",\r\n          input: cd,\r\n          comentaire: com,\r\n        });\r\n      }\r\n    } else window.alert(\"Choisir un seul ligne !\");\r\n  };\r\n  // if (!props.state) {\r\n  //   return <Redirect path=\"/login\"></Redirect>;\r\n  // }\r\n  return (\r\n    <div className=\"containor\">\r\n      <form className=\"formInter\">\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Lot</label>\r\n            <input type=\"text\" onChange={(e) => setLot(e.target.value)} />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Ordre de Fabrication</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setOF(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Qunatité démontée</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setCd(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Commentaire</label>\r\n            <input type=\"text\" onChange={(e) => setCom(e.target.value)} />\r\n          </div>\r\n        </div>\r\n\r\n        <button className=\"buttonUpdate\" onClick={updateRow}>\r\n          Update\r\n        </button>\r\n      </form>\r\n      {/* <GetTable data={filter(data)} /> */}\r\n      <GetTable data={filter(data)} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_demontage\\GetTable.js",["212","213","214"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Export\\Interface.js",["215","216"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Export\\Form.js",["217","218","219"],"import { useContext, useEffect, useState } from \"react\";\r\nimport \"./Form.css\";\r\nimport Axios from \"axios\";\r\nimport GetTable from \"./GetTable\";\r\nimport { GetUser } from \"../../Helper/context\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nfunction Form(props) {\r\n  const [lot, setLot] = useState(\"\");\r\n  const [OF, setOF] = useState(\"\");\r\n  const [rebut, setRebut] = useState(\"\");\r\n  const [exporte, setExport] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n  const [com, setCom] = useState(\"\");\r\n\r\n  var retrievedObject = localStorage.getItem(\"object\");\r\n  const userData = JSON.parse(retrievedObject);\r\n\r\n  const getUsers = () => {\r\n    Axios.get(\"http://localhost:3001/data/new_inter\").then((res) => {\r\n      setData(res.data);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  const filter = (rows) => {\r\n    return rows.filter(\r\n      (rows) =>\r\n        rows.OF.toString().toLowerCase().indexOf(OF) === 0 &&\r\n        rows.Lot.toString().toLowerCase().indexOf(lot) === 0\r\n    );\r\n  };\r\n\r\n  const updateRow = () => {\r\n    const filteredData = filter(data);\r\n\r\n    if (filteredData.length === 1) {\r\n      let Qt_exporte = parseInt(exporte) + parseInt(filteredData[0].Qt_Export);\r\n\r\n      let qt_rebut = parseInt(rebut) + parseInt(filteredData[0].Rbut_export);\r\n\r\n      let qt_montage =\r\n        parseInt(filteredData[0].Montage) -\r\n        parseInt(filteredData[0].Rbut_montage);\r\n\r\n      let qt_bloquage = parseInt(filteredData[0].Bloquage);\r\n      let test = qt_montage - qt_bloquage;\r\n\r\n      let som_reb =\r\n        parseInt(filteredData[0].Qt_Rebut) +\r\n        parseInt(filteredData[0].Rebut_montage) +\r\n        parseInt(filteredData[0].Rebut_export);\r\n\r\n      let encoursNet =\r\n        parseInt(filteredData[0].D_montage) -\r\n        parseInt(filteredData[0].Zingueur) -\r\n        parseInt(filteredData[0].Bloquage) -\r\n        som_reb;\r\n\r\n      if (Qt_exporte <= test && test !== 0) {\r\n        Axios.post(\"http://localhost:3001/Export/updaterow\", {\r\n          exporte: Qt_exporte,\r\n          rebut: qt_rebut,\r\n          id: filteredData[0].OF,\r\n          encoursNet: encoursNet,\r\n          /////traceability///////\r\n          matricule: userData.matricule,\r\n          user: userData.name,\r\n          produit: filteredData[0].Produit,\r\n          lot: filteredData[0].Lot,\r\n          ref: filteredData[0].R_f_rence,\r\n          table: \"Export\",\r\n          input: exporte,\r\n          comentaire: com,\r\n        });\r\n      } else {\r\n        window.alert(\"Valeurs Invalides !\");\r\n      }\r\n    } else window.alert(\"Choisir une seule ligne !\");\r\n  };\r\n  return (\r\n    <div className=\"containor\">\r\n      <form className=\"formInter\">\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Lot</label>\r\n            <input type=\"text\" onChange={(e) => setLot(e.target.value)} />\r\n          </div>\r\n        </div>\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Ordre de Fabrication</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setOF(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Qunatité Exporté</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setExport(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Quantité Rebuté</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setRebut(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Commentaire</label>\r\n            <input type=\"text\" onChange={(e) => setCom(e.target.value)} />\r\n          </div>\r\n        </div>\r\n        <button className=\"buttonUpdate\" onClick={updateRow}>\r\n          Update\r\n        </button>\r\n      </form>\r\n      <GetTable data={filter(data)} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Export\\GetTable.js",["220","221","222"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Users_table\\users.js",[],["223","224"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\table\\users_table.js",[],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\NavBar\\navBarTest.js",["225"],"import { Route, NavLink } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport Navbar from \"./navBar\";\r\nimport Bloquage from \"../Update_Bloquage/Interface\";\r\nimport Users from \"../Form/Form\";\r\nimport Demontage from \"../Update_demontage/Interface\";\r\nimport Prep from \"../Update_QP_QR/Interface\";\r\nimport Zinguage from \"../Update_Zinguage/Interface\";\r\nimport Montage from \"../Update_Montage/Interface\";\r\nimport Export from \"../Update_Export/Interface\";\r\nimport Upload from \"../Upload_file/upload\";\r\nimport Traceability from \"../Traceability Table/Interface\";\r\nfunction navBarTest() {\r\n  return (\r\n    <div>\r\n      <nav className=\"navBar\">\r\n        <ul>\r\n          <li>\r\n            <NavLink className=\"link\" to=\"/interface/upload\">\r\n              Upload\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact className=\"link\" to=\"/interface/utilisateur\">\r\n              Utilisateur\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink className=\"link\" to=\"/demontage\">\r\n              Demontage\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink className=\"link\" to=\"/preparation\">\r\n              Preparation\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink className=\"link\" to=\"/bloquage\">\r\n              Bloquage\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink className=\"link\" to=\"/zinguage\">\r\n              Zinguage\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink className=\"link\" to=\"/montage\">\r\n              Montage\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink className=\"link\" to=\"/export\">\r\n              Export\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink className=\"link\" to=\"/traceability\">\r\n              Tableau de tracabilité\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      {/* <Navbar></Navbar> */}\r\n      <main>\r\n        <Route path=\"/interface/upload\">\r\n          <Upload></Upload>\r\n        </Route>\r\n        <Route path=\"/interface/utilisateur\">\r\n          <Users></Users>\r\n        </Route>\r\n        <Route path=\"/demontage\">\r\n          <Demontage></Demontage>\r\n        </Route>\r\n        <Route path=\"/preparation\">\r\n          <Prep></Prep>\r\n        </Route>\r\n        <Route path=\"/bloquage\">\r\n          <Bloquage></Bloquage>\r\n        </Route>\r\n        <Route path=\"/zinguage\">\r\n          <Zinguage></Zinguage>\r\n        </Route>\r\n        <Route path=\"/montage\">\r\n          <Montage></Montage>\r\n        </Route>\r\n        <Route path=\"/export\">\r\n          <Export></Export>\r\n        </Route>\r\n        <Route path=\"/traceability\">\r\n          <Traceability></Traceability>\r\n        </Route>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default navBarTest;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\NavBar\\navBar.js",["226","227"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_QP_QR\\Interface.js",["228","229"],"import Form from \"./Form\";\r\nimport GetTable from \"./GetTable\";\r\nimport Navbar from \"../NavBar/nav\";\r\nimport \"./Interface.css\";\r\n\r\nfunction Interface() {\r\n  return (\r\n    <div>\r\n      {/* <div className=\"addUser\">\r\n        <Navbar />\r\n        <div className=\"sep\"></div> */}\r\n      <Form />\r\n      {/* </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Interface;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_QP_QR\\Form.js",["230","231"],"import { useContext, useEffect, useState } from \"react\";\r\nimport \"./Form.css\";\r\nimport Axios from \"axios\";\r\nimport GetTable from \"./GetTable\";\r\nimport { GetUser } from \"../../Helper/context\";\r\n\r\nfunction Form() {\r\n  const [lot, setLot] = useState(\"\");\r\n  const [OF, setOF] = useState(\"\");\r\n  const [CR, setCR] = useState(\"\");\r\n  const [CP, setCP] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n  const [com, setCom] = useState(\"\");\r\n\r\n  var retrievedObject = localStorage.getItem(\"object\");\r\n  const userData = JSON.parse(retrievedObject);\r\n\r\n  const updateData = {\r\n    CR: CR,\r\n    CP: CP,\r\n  };\r\n\r\n  const getUsers = () => {\r\n    Axios.get(\"http://localhost:3001/data/new_inter\").then((res) => {\r\n      setData(res.data);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  const filter = (rows) => {\r\n    return rows.filter(\r\n      (rows) =>\r\n        rows.OF.toString().toLowerCase().indexOf(OF) === 0 &&\r\n        rows.Lot.toString().toLowerCase().indexOf(lot) === 0\r\n    );\r\n  };\r\n\r\n  const updateRow = () => {\r\n    const filteredData = filter(data);\r\n    let qt_prep;\r\n    let reb;\r\n    if (filteredData.length === 1) {\r\n      if (CR !== null && CP !== null) {\r\n        if (parseInt(CP) > parseInt(filteredData[0].D_montage)) {\r\n          window.alert(\"quantité préparé Supérieur à quantité démonté !\");\r\n        } else {\r\n          if (filteredData[0].Qt_prepare && filteredData[0].Qt_Rebut) {\r\n            qt_prep = parseInt(CP) + parseInt(filteredData[0].Qt_prepare);\r\n            reb = parseInt(CR) + parseInt(filteredData[0].Qt_Rebut);\r\n          } else {\r\n            qt_prep = parseInt(CP);\r\n            reb = parseInt(CR);\r\n          }\r\n          console.log(qt_prep);\r\n          Axios.post(\"http://localhost:3001/updaterow\", {\r\n            newCR: reb,\r\n            newCP: qt_prep,\r\n            id: filteredData[0].OF,\r\n            /////traceability///////\r\n            matricule: userData.matricule,\r\n            user: userData.name,\r\n            produit: filteredData[0].Produit,\r\n            lot: filteredData[0].Lot,\r\n            ref: filteredData[0].R_f_rence,\r\n            table: \"Préparation\",\r\n            input_prep: CP,\r\n            input_rebut: CR,\r\n            comentaire: com,\r\n          });\r\n        }\r\n      }\r\n    } else window.alert(\"Choisir un seul ligne !\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"containor\">\r\n      <form className=\"formInter\">\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Lot</label>\r\n            <input type=\"text\" onChange={(e) => setLot(e.target.value)} />\r\n          </div>\r\n        </div>\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Ordre de Fabrication</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setOF(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Quantité préparé</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setCP(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Champ Rebut</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setCR(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Commentaire</label>\r\n            <input type=\"text\" onChange={(e) => setCom(e.target.value)} />\r\n          </div>\r\n        </div>\r\n        <button className=\"buttonUpdate\" onClick={updateRow}>\r\n          Update\r\n        </button>\r\n      </form>\r\n      <GetTable update={updateData} data={filter(data)} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_QP_QR\\GetTable.js",["232","233","234"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Form\\GetTable.js",[],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Form\\users_table.js",[],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Helper\\context.js",["235","236"],"import { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const GetUser = createContext({});\r\nexport const LoginContext = createContext({});\r\nexport const uploadContext = createContext();\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Upload_file\\upload.js",["237","238","239","240","241"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Logout_Header\\logout.js",["242","243"],"import React, { useContext } from \"react\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { LoginContext } from \"../../Helper/context\";\r\nimport \"./logout.css\";\r\nimport Logo from \"./PMI-Logo - Copie.png\";\r\n\r\nfunction Logout(props) {\r\n  // const { logedIn, setLogedIn } = useContext(LoginContext);\r\n  const history = useHistory();\r\n\r\n  const logOut = () => {\r\n    window.localStorage.removeItem(\"loggedIn\");\r\n    history.push(\"/login\");\r\n    window.location.reload(false);\r\n    // setLogedIn(false);\r\n  };\r\n  if (!props.state) {\r\n    return <Redirect to=\"/login\"></Redirect>;\r\n  }\r\n  return (\r\n    <div className=\"header\">\r\n      <img className=\"logoLogout\" src={Logo} alt=\"logo\" />\r\n      <button className=\"logOutButton\" onClick={logOut}>\r\n        Deconnecter\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logout;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Traceability Table\\Interface.js",[],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Traceability Table\\Form.js",["244","245"],"import \"./Form.css\";\r\nimport {\r\n  useDownloadExcel,\r\n  DownloadTableExcel,\r\n} from \"react-export-table-to-excel\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nfunction Form(props) {\r\n  const tableRef = useRef(null);\r\n  const [data, setData] = useState([]);\r\n\r\n  const getUsers = () => {\r\n    Axios.get(\"http://localhost:3001/tracData\").then((res) => {\r\n      setData(res.data);\r\n      console.log(res);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  const column = [\r\n    { heading: \"ID\", value: \"id\" },\r\n    { heading: \"Matricule\", value: \"Matricule\" },\r\n    { heading: \"User\", value: \"User\" },\r\n    { heading: \"Produit\", value: \"Produit\" },\r\n    { heading: \"Lot\", value: \"Lot\" },\r\n    { heading: \"Of\", value: \"Of\" },\r\n    { heading: \"Reference\", value: \"Reference\" },\r\n    { heading: \"Table\", value: \"Table\" },\r\n    { heading: \"Type\", value: \"Type\" },\r\n    { heading: \"Commentaire\", value: \"Commentaire\" },\r\n    { heading: \"Qte_Saisi\", value: \"Qte_Saisi\" },\r\n    { heading: \"Date d'opération\", value: \"Date_doperation\" },\r\n  ];\r\n\r\n  const { onDownload } = useDownloadExcel({\r\n    currentTableRef: tableRef.current,\r\n    filename: \"Tableau de tracabilité\",\r\n    sheet: \"Tableau de tracabilité\",\r\n  });\r\n  // if (!props.state) {\r\n  //   return <Redirect path=\"/login\"></Redirect>;\r\n  // }\r\n  return (\r\n    <div className=\"containor\">\r\n      <button onClick={onDownload} className=\"exportButton\">\r\n        {\" \"}\r\n        Exporter fichier excel\r\n      </button>\r\n\r\n      <div className=\"table-wrapper\">\r\n        <table className=\"fl-table\" ref={tableRef}>\r\n          <thead className=\"thead\">\r\n            <tr>\r\n              {column.map((item, index) => (\r\n                <TableHeadItem item={item} />\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((item, index) => (\r\n              <TableRow item={item} column={column} />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst TableHeadItem = ({ item }) => <th key={item}>{item.heading}</th>;\r\nconst TableRow = ({ item, column }) => (\r\n  <tr>\r\n    {column.map((columnItem, index) => {\r\n      return <td>{item[`${columnItem.value}`]}</td>;\r\n    })}\r\n  </tr>\r\n);\r\nexport default Form;\r\n",{"ruleId":"246","severity":1,"message":"247","line":4,"column":10,"nodeType":"248","messageId":"249","endLine":4,"endColumn":23},{"ruleId":"250","replacedBy":"251"},{"ruleId":"252","replacedBy":"253"},{"ruleId":"246","severity":1,"message":"254","line":4,"column":10,"nodeType":"248","messageId":"249","endLine":4,"endColumn":22},{"ruleId":"246","severity":1,"message":"255","line":4,"column":24,"nodeType":"248","messageId":"249","endLine":4,"endColumn":31},{"ruleId":"246","severity":1,"message":"256","line":5,"column":10,"nodeType":"248","messageId":"249","endLine":5,"endColumn":21},{"ruleId":"246","severity":1,"message":"257","line":5,"column":23,"nodeType":"248","messageId":"249","endLine":5,"endColumn":33},{"ruleId":"246","severity":1,"message":"258","line":5,"column":35,"nodeType":"248","messageId":"249","endLine":5,"endColumn":44},{"ruleId":"246","severity":1,"message":"259","line":5,"column":46,"nodeType":"248","messageId":"249","endLine":5,"endColumn":54},{"ruleId":"246","severity":1,"message":"260","line":16,"column":8,"nodeType":"248","messageId":"249","endLine":16,"endColumn":19},{"ruleId":"246","severity":1,"message":"261","line":5,"column":10,"nodeType":"248","messageId":"249","endLine":5,"endColumn":18},{"ruleId":"246","severity":1,"message":"254","line":6,"column":19,"nodeType":"248","messageId":"249","endLine":6,"endColumn":31},{"ruleId":"246","severity":1,"message":"262","line":10,"column":11,"nodeType":"248","messageId":"249","endLine":10,"endColumn":19},{"ruleId":"246","severity":1,"message":"263","line":10,"column":21,"nodeType":"248","messageId":"249","endLine":10,"endColumn":32},{"ruleId":"246","severity":1,"message":"257","line":1,"column":10,"nodeType":"248","messageId":"249","endLine":1,"endColumn":20},{"ruleId":"246","severity":1,"message":"258","line":1,"column":22,"nodeType":"248","messageId":"249","endLine":1,"endColumn":31},{"ruleId":"246","severity":1,"message":"261","line":1,"column":10,"nodeType":"248","messageId":"249","endLine":1,"endColumn":18},{"ruleId":"246","severity":1,"message":"264","line":1,"column":20,"nodeType":"248","messageId":"249","endLine":1,"endColumn":24},{"ruleId":"246","severity":1,"message":"265","line":3,"column":25,"nodeType":"248","messageId":"249","endLine":3,"endColumn":30},{"ruleId":"250","replacedBy":"266"},{"ruleId":"252","replacedBy":"267"},{"ruleId":"246","severity":1,"message":"268","line":2,"column":8,"nodeType":"248","messageId":"249","endLine":2,"endColumn":16},{"ruleId":"246","severity":1,"message":"269","line":3,"column":8,"nodeType":"248","messageId":"249","endLine":3,"endColumn":14},{"ruleId":"246","severity":1,"message":"258","line":1,"column":10,"nodeType":"248","messageId":"249","endLine":1,"endColumn":19},{"ruleId":"246","severity":1,"message":"259","line":1,"column":21,"nodeType":"248","messageId":"249","endLine":1,"endColumn":29},{"ruleId":"246","severity":1,"message":"270","line":2,"column":8,"nodeType":"248","messageId":"249","endLine":2,"endColumn":13},{"ruleId":"246","severity":1,"message":"257","line":1,"column":10,"nodeType":"248","messageId":"249","endLine":1,"endColumn":20},{"ruleId":"246","severity":1,"message":"255","line":5,"column":10,"nodeType":"248","messageId":"249","endLine":5,"endColumn":17},{"ruleId":"246","severity":1,"message":"268","line":2,"column":8,"nodeType":"248","messageId":"249","endLine":2,"endColumn":16},{"ruleId":"246","severity":1,"message":"269","line":3,"column":8,"nodeType":"248","messageId":"249","endLine":3,"endColumn":14},{"ruleId":"246","severity":1,"message":"257","line":1,"column":10,"nodeType":"248","messageId":"249","endLine":1,"endColumn":20},{"ruleId":"246","severity":1,"message":"255","line":5,"column":10,"nodeType":"248","messageId":"249","endLine":5,"endColumn":17},{"ruleId":"246","severity":1,"message":"261","line":6,"column":10,"nodeType":"248","messageId":"249","endLine":6,"endColumn":18},{"ruleId":"246","severity":1,"message":"258","line":1,"column":10,"nodeType":"248","messageId":"249","endLine":1,"endColumn":19},{"ruleId":"246","severity":1,"message":"259","line":1,"column":21,"nodeType":"248","messageId":"249","endLine":1,"endColumn":29},{"ruleId":"246","severity":1,"message":"270","line":2,"column":8,"nodeType":"248","messageId":"249","endLine":2,"endColumn":13},{"ruleId":"246","severity":1,"message":"268","line":2,"column":8,"nodeType":"248","messageId":"249","endLine":2,"endColumn":16},{"ruleId":"246","severity":1,"message":"269","line":3,"column":8,"nodeType":"248","messageId":"249","endLine":3,"endColumn":14},{"ruleId":"246","severity":1,"message":"258","line":1,"column":10,"nodeType":"248","messageId":"249","endLine":1,"endColumn":19},{"ruleId":"246","severity":1,"message":"259","line":1,"column":21,"nodeType":"248","messageId":"249","endLine":1,"endColumn":29},{"ruleId":"246","severity":1,"message":"270","line":2,"column":8,"nodeType":"248","messageId":"249","endLine":2,"endColumn":13},{"ruleId":"246","severity":1,"message":"257","line":1,"column":10,"nodeType":"248","messageId":"249","endLine":1,"endColumn":20},{"ruleId":"246","severity":1,"message":"255","line":5,"column":10,"nodeType":"248","messageId":"249","endLine":5,"endColumn":17},{"ruleId":"246","severity":1,"message":"268","line":2,"column":8,"nodeType":"248","messageId":"249","endLine":2,"endColumn":16},{"ruleId":"246","severity":1,"message":"269","line":3,"column":8,"nodeType":"248","messageId":"249","endLine":3,"endColumn":14},{"ruleId":"246","severity":1,"message":"257","line":1,"column":10,"nodeType":"248","messageId":"249","endLine":1,"endColumn":20},{"ruleId":"246","severity":1,"message":"255","line":5,"column":10,"nodeType":"248","messageId":"249","endLine":5,"endColumn":17},{"ruleId":"246","severity":1,"message":"261","line":6,"column":10,"nodeType":"248","messageId":"249","endLine":6,"endColumn":18},{"ruleId":"246","severity":1,"message":"258","line":1,"column":10,"nodeType":"248","messageId":"249","endLine":1,"endColumn":19},{"ruleId":"246","severity":1,"message":"259","line":1,"column":21,"nodeType":"248","messageId":"249","endLine":1,"endColumn":29},{"ruleId":"246","severity":1,"message":"270","line":2,"column":8,"nodeType":"248","messageId":"249","endLine":2,"endColumn":13},{"ruleId":"246","severity":1,"message":"268","line":2,"column":8,"nodeType":"248","messageId":"249","endLine":2,"endColumn":16},{"ruleId":"246","severity":1,"message":"269","line":3,"column":8,"nodeType":"248","messageId":"249","endLine":3,"endColumn":14},{"ruleId":"246","severity":1,"message":"257","line":1,"column":10,"nodeType":"248","messageId":"249","endLine":1,"endColumn":20},{"ruleId":"246","severity":1,"message":"255","line":5,"column":10,"nodeType":"248","messageId":"249","endLine":5,"endColumn":17},{"ruleId":"246","severity":1,"message":"261","line":6,"column":10,"nodeType":"248","messageId":"249","endLine":6,"endColumn":18},{"ruleId":"246","severity":1,"message":"258","line":1,"column":10,"nodeType":"248","messageId":"249","endLine":1,"endColumn":19},{"ruleId":"246","severity":1,"message":"259","line":1,"column":21,"nodeType":"248","messageId":"249","endLine":1,"endColumn":29},{"ruleId":"246","severity":1,"message":"270","line":2,"column":8,"nodeType":"248","messageId":"249","endLine":2,"endColumn":13},{"ruleId":"250","replacedBy":"271"},{"ruleId":"252","replacedBy":"272"},{"ruleId":"246","severity":1,"message":"269","line":3,"column":8,"nodeType":"248","messageId":"249","endLine":3,"endColumn":14},{"ruleId":"246","severity":1,"message":"257","line":1,"column":17,"nodeType":"248","messageId":"249","endLine":1,"endColumn":27},{"ruleId":"246","severity":1,"message":"255","line":3,"column":10,"nodeType":"248","messageId":"249","endLine":3,"endColumn":17},{"ruleId":"246","severity":1,"message":"268","line":2,"column":8,"nodeType":"248","messageId":"249","endLine":2,"endColumn":16},{"ruleId":"246","severity":1,"message":"269","line":3,"column":8,"nodeType":"248","messageId":"249","endLine":3,"endColumn":14},{"ruleId":"246","severity":1,"message":"257","line":1,"column":10,"nodeType":"248","messageId":"249","endLine":1,"endColumn":20},{"ruleId":"246","severity":1,"message":"255","line":5,"column":10,"nodeType":"248","messageId":"249","endLine":5,"endColumn":17},{"ruleId":"246","severity":1,"message":"258","line":1,"column":10,"nodeType":"248","messageId":"249","endLine":1,"endColumn":19},{"ruleId":"246","severity":1,"message":"259","line":1,"column":21,"nodeType":"248","messageId":"249","endLine":1,"endColumn":29},{"ruleId":"246","severity":1,"message":"270","line":2,"column":8,"nodeType":"248","messageId":"249","endLine":2,"endColumn":13},{"ruleId":"246","severity":1,"message":"258","line":1,"column":25,"nodeType":"248","messageId":"249","endLine":1,"endColumn":34},{"ruleId":"246","severity":1,"message":"259","line":1,"column":36,"nodeType":"248","messageId":"249","endLine":1,"endColumn":44},{"ruleId":"246","severity":1,"message":"258","line":1,"column":17,"nodeType":"248","messageId":"249","endLine":1,"endColumn":26},{"ruleId":"246","severity":1,"message":"273","line":7,"column":10,"nodeType":"248","messageId":"249","endLine":7,"endColumn":19},{"ruleId":"246","severity":1,"message":"274","line":7,"column":21,"nodeType":"248","messageId":"249","endLine":7,"endColumn":33},{"ruleId":"246","severity":1,"message":"275","line":8,"column":10,"nodeType":"248","messageId":"249","endLine":8,"endColumn":24},{"ruleId":"246","severity":1,"message":"276","line":8,"column":26,"nodeType":"248","messageId":"249","endLine":8,"endColumn":43},{"ruleId":"246","severity":1,"message":"257","line":1,"column":17,"nodeType":"248","messageId":"249","endLine":1,"endColumn":27},{"ruleId":"246","severity":1,"message":"254","line":3,"column":10,"nodeType":"248","messageId":"249","endLine":3,"endColumn":22},{"ruleId":"246","severity":1,"message":"277","line":4,"column":3,"nodeType":"248","messageId":"249","endLine":4,"endColumn":21},{"ruleId":"246","severity":1,"message":"261","line":8,"column":10,"nodeType":"248","messageId":"249","endLine":8,"endColumn":18},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["278"],"no-negated-in-lhs",["279"],"'LoginContext' is defined but never used.","'GetUser' is defined but never used.","'useCallback' is defined but never used.","'useContext' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'UserLogedIn' is defined but never used.","'Redirect' is defined but never used.","'userData' is assigned a value but never used.","'setUserData' is assigned a value but never used.","'Rout' is defined but never used.","'Route' is defined but never used.",["278"],["279"],"'GetTable' is defined but never used.","'Navbar' is defined but never used.","'Axios' is defined but never used.",["278"],["279"],"'excelFile' is assigned a value but never used.","'setExcelFile' is assigned a value but never used.","'excelFileError' is assigned a value but never used.","'setExcelFileError' is assigned a value but never used.","'DownloadTableExcel' is defined but never used.","no-global-assign","no-unsafe-negation"]
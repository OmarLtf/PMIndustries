[{"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\index.js":"1","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\App.js":"2","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Login page\\login.js":"3","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Form\\Form.js":"4","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\NavBar\\nav.js":"5","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\table\\GetTable.js":"6","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\table\\Table.js":"7","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Zinguage\\Interface.js":"8","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Zinguage\\GetTable.js":"9","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Zinguage\\Form.js":"10","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Bloquage\\Interface.js":"11","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Bloquage\\Form.js":"12","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Bloquage\\GetTable.js":"13","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Montage\\Interface.js":"14","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Montage\\GetTable.js":"15","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Montage\\Form.js":"16","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_demontage\\Interface.js":"17","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_demontage\\Form.js":"18","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_demontage\\GetTable.js":"19","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Export\\Interface.js":"20","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Export\\Form.js":"21","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Export\\GetTable.js":"22","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Users_table\\users.js":"23","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\table\\users_table.js":"24","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\NavBar\\navBarTest.js":"25","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\NavBar\\navBar.js":"26","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_QP_QR\\Interface.js":"27","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_QP_QR\\Form.js":"28","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_QP_QR\\GetTable.js":"29","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Form\\GetTable.js":"30","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Form\\users_table.js":"31","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Helper\\context.js":"32","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Upload_file\\upload.js":"33","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Logout_Header\\logout.js":"34","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Traceability Table\\Interface.js":"35","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Traceability Table\\Form.js":"36"},{"size":201,"mtime":1662391225803,"results":"37","hashOfConfig":"38"},{"size":2397,"mtime":1664022951577,"results":"39","hashOfConfig":"38"},{"size":2203,"mtime":1662345499016,"results":"40","hashOfConfig":"38"},{"size":2615,"mtime":1662375646250,"results":"41","hashOfConfig":"38"},{"size":478,"mtime":1662146171473,"results":"42","hashOfConfig":"38"},{"size":681,"mtime":1661108150033,"results":"43","hashOfConfig":"38"},{"size":791,"mtime":1661710722495,"results":"44","hashOfConfig":"38"},{"size":243,"mtime":1660837200203,"results":"45","hashOfConfig":"38"},{"size":1327,"mtime":1662388361939,"results":"46","hashOfConfig":"38"},{"size":4751,"mtime":1662392255973,"results":"47","hashOfConfig":"38"},{"size":243,"mtime":1661709284101,"results":"48","hashOfConfig":"38"},{"size":4687,"mtime":1662392573768,"results":"49","hashOfConfig":"38"},{"size":1327,"mtime":1662388300172,"results":"50","hashOfConfig":"38"},{"size":243,"mtime":1661709338320,"results":"51","hashOfConfig":"38"},{"size":1327,"mtime":1662388343022,"results":"52","hashOfConfig":"38"},{"size":5112,"mtime":1662459918492,"results":"53","hashOfConfig":"38"},{"size":243,"mtime":1661709302325,"results":"54","hashOfConfig":"38"},{"size":3556,"mtime":1662394126722,"results":"55","hashOfConfig":"38"},{"size":1371,"mtime":1662388314145,"results":"56","hashOfConfig":"38"},{"size":243,"mtime":1661709347029,"results":"57","hashOfConfig":"38"},{"size":4733,"mtime":1662460024984,"results":"58","hashOfConfig":"38"},{"size":1327,"mtime":1662388335387,"results":"59","hashOfConfig":"38"},{"size":307,"mtime":1661699320920,"results":"60","hashOfConfig":"38"},{"size":1385,"mtime":1661709689885,"results":"61","hashOfConfig":"38"},{"size":2852,"mtime":1662141445735,"results":"62","hashOfConfig":"38"},{"size":4025,"mtime":1664022976866,"results":"63","hashOfConfig":"38"},{"size":363,"mtime":1660318117846,"results":"64","hashOfConfig":"38"},{"size":4984,"mtime":1662459855011,"results":"65","hashOfConfig":"38"},{"size":1327,"mtime":1662388351139,"results":"66","hashOfConfig":"38"},{"size":681,"mtime":1661719774818,"results":"67","hashOfConfig":"38"},{"size":1318,"mtime":1662459277726,"results":"68","hashOfConfig":"38"},{"size":201,"mtime":1662344179047,"results":"69","hashOfConfig":"38"},{"size":2064,"mtime":1662392454483,"results":"70","hashOfConfig":"38"},{"size":844,"mtime":1662206957245,"results":"71","hashOfConfig":"38"},{"size":170,"mtime":1662067571716,"results":"72","hashOfConfig":"38"},{"size":2340,"mtime":1664023408431,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},"177r9lg",{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"77"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"77"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"77"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"77"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"77"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"77"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"77"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"77"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"77"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"77"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"77"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"77"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"77"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"77"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"77"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"77"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"77"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"77"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"77"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"77"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"77"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"77"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"77"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"77"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"77"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\index.js",["167"],"import ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport React from \"react\";\n\nReactDOM.render(<App></App>, document.getElementById(\"root\"));\n",["168","169"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\App.js",["170","171","172","173","174","175","176"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Login page\\login.js",["177","178","179","180"],"import { useContext, useState } from \"react\";\r\nimport Logo from \"./PMI-Logo - Copie.png\";\r\nimport Axios from \"axios\";\r\nimport \"./login.css\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { GetUser, LoginContext } from \"../../Helper/context\";\r\n\r\nfunction Login(props) {\r\n  // const { logedIn, setLogedIn } = useContext(LoginContext);\r\n  const { userData, setUserData } = useContext(GetUser);\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const history = useHistory();\r\n  // setLogedIn(false);\r\n\r\n  const login = (e) => {\r\n    e.preventDefault();\r\n    Axios.get(`http://localhost:3001/login/${name}-${password}`).then(\r\n      (response) => {\r\n        if (response.data[0] === \"yes\") {\r\n          window.localStorage.setItem(\"loggedIn\", true);\r\n          let object = {\r\n            name: response.data[1].userName,\r\n            matricule: response.data[1].matricule,\r\n            role: response.data[1].role,\r\n          };\r\n          localStorage.setItem(\"object\", JSON.stringify(object));\r\n          history.push(\"/demontage\");\r\n          window.location.reload(false);\r\n        } else {\r\n          // setLogedIn(false);\r\n          alert(\"wrong informations\");\r\n        }\r\n      }\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"body\">\r\n      <div className=\"loginContainer\">\r\n        <img className=\"imgLogin\" src={Logo} alt=\"logo\" />\r\n        <h1 className=\"gpao\">G.P.A.O</h1>\r\n        <form className=\"formLogin\">\r\n          <label className=\"labelLogin\">Nom d'utilisateur</label>\r\n          <input\r\n            className=\"inputLogin\"\r\n            type=\"test\"\r\n            required\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n          <label className=\"labelLogin\">Mot de passe</label>\r\n          <input\r\n            className=\"inputLogin\"\r\n            type=\"password\"\r\n            required\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <button className=\"buttonLogin\" onClick={login}>\r\n            Connexion\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n// }\r\n\r\nexport default Login;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Form\\Form.js",["181","182"],"import { useContext, useEffect, useState } from \"react\";\r\nimport \"./Form.css\";\r\nimport Axios from \"axios\";\r\nimport Table from \"./GetTable\";\r\nfunction Form(props) {\r\n  const [matricule, setMatricule] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const addUser = (e) => {\r\n    e.preventDefault();\r\n    Axios.post(\"http://localhost:3001/adduser\", {\r\n      userName: name,\r\n      matricule: matricule,\r\n      role: role,\r\n      password: password,\r\n    }).then((response) => {\r\n      console.log(response);\r\n    });\r\n    window.location.reload(false);\r\n    clearFields();\r\n  };\r\n  // useEffect(() => {\r\n  //   setLogedIn(true);\r\n  // });\r\n\r\n  const clearFields = () => {\r\n    setMatricule(\"\");\r\n    setRole(\"\");\r\n    setPassword(\"\");\r\n    setName(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"interfaceContainer\">\r\n      <h1 className=\"title bloquage\">Table Utilisateurs</h1>\r\n      <form className=\"formInter\">\r\n        <div className=\"formCell\">\r\n          <div>\r\n            <label>Matricule :</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              value={matricule}\r\n              onChange={(e) => setMatricule(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Nom Complet :</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"formCell\">\r\n          <div>\r\n            <label>Role :</label>\r\n            <select value={role} onChange={(e) => setRole(e.target.value)}>\r\n              <option>Choisir une role</option>\r\n              <option>Administrateur</option>\r\n              <option>Chef production</option>\r\n              <option>Chef ilot</option>\r\n              <option>Consultant</option>\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label>Mot de pass :</label>\r\n            <input\r\n              type=\"password\"\r\n              required\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <button className=\"buttonEnvoyer\" onClick={addUser}>\r\n            Envoyer\r\n          </button>\r\n          <button className=\"buttonAnnuler\" onClick={clearFields}>\r\n            Annuler\r\n          </button>\r\n        </div>\r\n      </form>\r\n      <Table></Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\NavBar\\nav.js",["183","184","185"],"import { Redirect, Rout } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport Nav from \"./navBarTest\";\r\nimport \"./interface.css\";\r\n\r\nfunction nav(props) {\r\n  // if (!props.state) {\r\n  //   return <Redirect to=\"/login\"></Redirect>;\r\n  // }\r\n  return (\r\n    <BrowserRouter>\r\n      {/* <Redirect to=\"/interface/utilisateur\"></Redirect> */}\r\n      <Nav></Nav>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default nav;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\table\\GetTable.js",[],["186","187"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\table\\Table.js",[],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Zinguage\\Interface.js",["188","189"],"import Form from \"./Form\";\r\nimport GetTable from \"./GetTable\";\r\nimport Navbar from \"../NavBar/nav\";\r\nimport \"./Interface.css\";\r\n\r\nfunction Interface() {\r\n  return (\r\n    <div>\r\n      <Form />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Interface;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Zinguage\\GetTable.js",["190","191","192"],"import { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Table from \"../table/Table\";\r\nimport \"./table.css\";\r\n\r\nfunction GetTable(props) {\r\n  const column = [\r\n    { heading: \"OF\", value: \"OF\" },\r\n    { heading: \"Lot\", value: \"Lot\" },\r\n    { heading: \"Produit\", value: \"Produit\" },\r\n    { heading: \"Référence\", value: \"R_f_rence\" },\r\n    { heading: \"Référence Sorea\", value: \"R_f_rence_Sorea\" },\r\n    { heading: \"E.Brut\", value: \"Encours_Atelier_Brut\" },\r\n    { heading: \"E.Net\", value: \"Encours_Atelier_Net\" },\r\n    { heading: \"Date de commande\", value: \"Date_De_Commande\" },\r\n    { heading: \"Qt Ddée\", value: \"Qt_Dd_e\" },\r\n    { heading: \"Démontage\", value: \"D_montage\" },\r\n    { heading: \"Qt Préparé\", value: \"Qt_prepare\" },\r\n    { heading: \"R.pre\", value: \"Qt_Rebut\" },\r\n    { heading: \"Zingueur\", value: \"Zingueur\" },\r\n    { heading: \"Bloquage\", value: \"Bloquage\" },\r\n    { heading: \"Montage\", value: \"Montage\" },\r\n    { heading: \"R.Montage\", value: \"Rbut_montage\" },\r\n    { heading: \"Qt Exporté\", value: \"Qt_Export\" },\r\n    { heading: \"R.Export\", value: \"Rbut_export\" },\r\n    { heading: \"Observation Prod\", value: \"Observation_Prod\" },\r\n    { heading: \"Taux de Rebut\", value: \"Taux_de_Rebut\" },\r\n  ];\r\n  return <Table data={props.data} column={column} />;\r\n}\r\n\r\nexport default GetTable;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Zinguage\\Form.js",["193","194","195"],"import { useContext, useEffect, useState } from \"react\";\r\nimport \"./Form.css\";\r\nimport Axios from \"axios\";\r\nimport GetTable from \"./GetTable\";\r\nimport { GetUser } from \"../../Helper/context\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nfunction Form(props) {\r\n  const notify = () => toast.success(\"Opération Validée\");\r\n  const [lot, setLot] = useState(\"\");\r\n  const [OF, setOF] = useState(\"\");\r\n  const [Qt_tr, setQtTr] = useState(\"\");\r\n  const [Qt_lib, setQtLib] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n  const [com, setCom] = useState(\"\");\r\n  var retrievedObject = localStorage.getItem(\"object\");\r\n  const userData = JSON.parse(retrievedObject);\r\n  const getUsers = () => {\r\n    Axios.get(\"http://localhost:3001/data/new_inter\").then((res) => {\r\n      setData(res.data);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  const filter = (rows) => {\r\n    return rows.filter(\r\n      (rows) =>\r\n        rows.OF.toString().toLowerCase().indexOf(OF) === 0 &&\r\n        rows.Lot.toString().toLowerCase().indexOf(lot) === 0\r\n    );\r\n  };\r\n\r\n  const updateRow = () => {\r\n    const filteredData = filter(data);\r\n\r\n    if (filteredData.length === 1) {\r\n      if (Qt_lib !== null && Qt_tr !== null) {\r\n        var Qt_zinguage = parseInt(Qt_tr) - parseInt(Qt_lib);\r\n        var zinguage_totale = Qt_zinguage + parseInt(filteredData[0].Zingueur);\r\n        var zinguageBrut = parseInt(Qt_tr) + parseInt(filteredData[0].Zingueur);\r\n        var qt_prep =\r\n          parseInt(filteredData[0].Qt_prepare) -\r\n          parseInt(filteredData[0].Qt_Rebut);\r\n\r\n        let som_reb =\r\n          parseInt(filteredData[0].Qt_Rebut) +\r\n          parseInt(filteredData[0].Rbut_montage) +\r\n          parseInt(filteredData[0].Rbut_export);\r\n\r\n        let encoursNet =\r\n          parseInt(filteredData[0].D_montage) -\r\n          zinguage_totale -\r\n          parseInt(filteredData[0].Bloquage) -\r\n          som_reb;\r\n\r\n        let encoursBrut =\r\n          parseInt(filteredData[0].D_montage) -\r\n          parseInt(filteredData[0].Montage) -\r\n          parseInt(filteredData[0].Qt_Rebut);\r\n\r\n        if (zinguage_totale <= qt_prep) {\r\n          notify();\r\n          Axios.post(\"http://localhost:3001/zinguage/updaterow\", {\r\n            zinguage: zinguage_totale,\r\n            id: filteredData[0].OF,\r\n            encoursNet: encoursNet,\r\n            encoursBrut: encoursBrut,\r\n            /////traceability///////\r\n            matricule: userData.matricule,\r\n            user: userData.name,\r\n            produit: filteredData[0].Produit,\r\n            lot: filteredData[0].Lot,\r\n            ref: filteredData[0].R_f_rence,\r\n            table: \"Zinguage\",\r\n            input_transfer: Qt_tr,\r\n            input_libere: Qt_lib,\r\n            comentaire: com,\r\n          });\r\n        } else {\r\n          window.alert(\"Zinguage superieur à quantité préparé\");\r\n        }\r\n      }\r\n    } else window.alert(\"Choisir un seul ligne !\");\r\n  };\r\n  if (props.role === \"Consultant\") {\r\n    return <Redirect to=\"/demontage\"></Redirect>;\r\n  }\r\n  return (\r\n    <div className=\"containor\">\r\n      <Toaster />\r\n      <h1 className=\"title bloquage\">Table Zinguage</h1>\r\n      <p className=\"msg\">Merci De Remplir Les Champs...😃</p>\r\n      <form className=\"formInter\">\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Lot :</label>\r\n            <input type=\"text\" onChange={(e) => setLot(e.target.value)} />\r\n          </div>\r\n        </div>\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Ordre de Fabrication :</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setOF(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Qunatité Transféré :</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setQtTr(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Quantité Liberé :</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setQtLib(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Commentaire :</label>\r\n            <input type=\"text\" onChange={(e) => setCom(e.target.value)} />\r\n          </div>\r\n        </div>\r\n        <button className=\"buttonUpdate\" onClick={updateRow}>\r\n          Update\r\n        </button>\r\n      </form>\r\n      <GetTable data={filter(data)} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Bloquage\\Interface.js",["196","197"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Bloquage\\Form.js",["198","199"],"import { useContext, useEffect, useState } from \"react\";\r\nimport \"./Form.css\";\r\nimport Axios from \"axios\";\r\nimport GetTable from \"./GetTable\";\r\nimport { GetUser } from \"../../Helper/context\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nfunction Form(props) {\r\n  const notify = () => toast.success(\"Opération Validée\");\r\n  const [lot, setLot] = useState(\"\");\r\n  const [OF, setOF] = useState(\"\");\r\n  const [Qt_tr, setQtTr] = useState(\"\");\r\n  const [Qt_lib, setQtLib] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n  const [com, setCom] = useState(\"\");\r\n\r\n  var retrievedObject = localStorage.getItem(\"object\");\r\n  const userData = JSON.parse(retrievedObject);\r\n\r\n  const getUsers = () => {\r\n    Axios.get(\"http://localhost:3001/data/new_inter\").then((res) => {\r\n      setData(res.data);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  const filter = (rows) => {\r\n    return rows.filter(\r\n      (rows) =>\r\n        rows.OF.toString().toLowerCase().indexOf(OF) === 0 &&\r\n        rows.Lot.toString().toLowerCase().indexOf(lot) === 0\r\n    );\r\n  };\r\n\r\n  const updateRow = () => {\r\n    const filteredData = filter(data);\r\n\r\n    if (filteredData.length === 1) {\r\n      if (Qt_lib !== null && Qt_tr !== null) {\r\n        var Qt_zinguage = parseInt(Qt_tr) - parseInt(Qt_lib);\r\n        var zinguage_totale = Qt_zinguage + parseInt(filteredData[0].Bloquage);\r\n        var qt_mont =\r\n          parseInt(filteredData[0].Qt_prepare) -\r\n          parseInt(filteredData[0].Qt_Rebut) -\r\n          parseInt(filteredData[0].Zingueur);\r\n\r\n        let som_reb =\r\n          parseInt(filteredData[0].Qt_Rebut) +\r\n          parseInt(filteredData[0].Rbut_montage);\r\n\r\n        let encoursBrut =\r\n          parseInt(filteredData[0].D_montage) -\r\n          parseInt(filteredData[0].Montage) -\r\n          som_reb;\r\n\r\n        let encoursNet =\r\n          encoursBrut - parseInt(filteredData[0].Zingueur) - zinguage_totale;\r\n\r\n        if (zinguage_totale <= qt_mont) {\r\n          Axios.post(\"http://localhost:3001/bloquage/updaterow\", {\r\n            zinguage: Qt_zinguage,\r\n            id: filteredData[0].OF,\r\n            encoursNet: encoursNet,\r\n            encoursBrut: encoursBrut,\r\n            /////traceability///////\r\n            matricule: userData.matricule,\r\n            user: userData.name,\r\n            produit: filteredData[0].Produit,\r\n            lot: filteredData[0].Lot,\r\n            ref: filteredData[0].R_f_rence,\r\n            table: \"Bloquage\",\r\n            input_transfer: Qt_tr,\r\n            input_libere: Qt_lib,\r\n            comentaire: com,\r\n          });\r\n          notify();\r\n        } else {\r\n          window.alert(\"Bloquage supérieur a quantité monté !\");\r\n        }\r\n      }\r\n    } else window.alert(\"Choisir un seul ligne !\");\r\n  };\r\n  if (props.role === \"Consultant\") {\r\n    return <Redirect to=\"/demontage\"></Redirect>;\r\n  }\r\n  return (\r\n    <div className=\"containor\">\r\n      <Toaster />\r\n      <h1 className=\"title bloquage\">Table Bloquage</h1>\r\n      <p className=\"msg\">Merci De Remplir Les Champs...😃 </p>\r\n\r\n      <form className=\"formInter\">\r\n        <div>\r\n          <div className=\"formCell\">\r\n            <div className=\"field\">\r\n              <label>Lot :</label>\r\n              <input type=\"text\" onChange={(e) => setLot(e.target.value)} />\r\n            </div>\r\n          </div>\r\n          <div className=\"formCell\">\r\n            <div className=\"field\">\r\n              <label>Ordre de Fabrication :</label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                onChange={(e) => setOF(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"field\">\r\n              <label>Qunatité Transféré :</label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                onChange={(e) => setQtTr(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"formCell\">\r\n            <div className=\"field\">\r\n              <label>Quantité Liberé :</label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                onChange={(e) => setQtLib(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"field\">\r\n              <label>Commentaire :</label>\r\n              <input type=\"text\" onChange={(e) => setCom(e.target.value)} />\r\n            </div>\r\n          </div>\r\n          <button className=\"buttonUpdate\" onClick={updateRow}>\r\n            Update\r\n          </button>\r\n        </div>\r\n      </form>\r\n      <GetTable data={filter(data)} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Bloquage\\GetTable.js",["200","201","202"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Montage\\Interface.js",["203","204"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Montage\\GetTable.js",["205","206","207"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Montage\\Form.js",["208","209","210"],"import { useContext, useEffect, useState } from \"react\";\r\nimport \"./Form.css\";\r\nimport Axios from \"axios\";\r\nimport GetTable from \"./GetTable\";\r\nimport { GetUser } from \"../../Helper/context\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nfunction Form() {\r\n  const notify = () => toast.success(\"Opération Validée\");\r\n  const [lot, setLot] = useState(\"\");\r\n  const [OF, setOF] = useState(\"\");\r\n  const [montage, setMontage] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n  const [rebut, setRebut] = useState(\"\");\r\n  const [com, setCom] = useState(\"\");\r\n\r\n  var retrievedObject = localStorage.getItem(\"object\");\r\n  const userData = JSON.parse(retrievedObject);\r\n\r\n  const getUsers = () => {\r\n    Axios.get(\"http://localhost:3001/data/new_inter\").then((res) => {\r\n      setData(res.data);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  const filter = (rows) => {\r\n    return rows.filter(\r\n      (rows) =>\r\n        rows.OF.toString().toLowerCase().indexOf(OF) === 0 &&\r\n        rows.Lot.toString().toLowerCase().indexOf(lot) === 0\r\n    );\r\n  };\r\n\r\n  const updateRow = () => {\r\n    const filteredData = filter(data);\r\n\r\n    if (filteredData.length === 1) {\r\n      if (montage !== null && rebut !== null) {\r\n        let qt_prep = parseInt(filteredData[0].Qt_prepare);\r\n        let reb_prep = parseInt(filteredData[0].Qt_Rebut);\r\n        let zing = parseInt(filteredData[0].Zingueur);\r\n        let bloquage = parseInt(filteredData[0].Bloquage);\r\n        let test = qt_prep - reb_prep - zing - bloquage;\r\n        let qt_mont = parseInt(montage) + parseInt(filteredData[0].Montage);\r\n        console.log(\"quantité montage\");\r\n\r\n        let Taux_reb =\r\n          ((parseInt(filteredData[0].Qt_Rebut) +\r\n            parseInt(filteredData[0].Rbut_montage) +\r\n            parseInt(rebut) +\r\n            parseInt(filteredData[0].Rbut_export)) /\r\n            parseInt(filteredData[0].D_montage)) *\r\n          100;\r\n\r\n        if (qt_mont <= test && test !== 0) {\r\n          let som_reb =\r\n            parseInt(filteredData[0].Qt_Rebut) +\r\n            parseInt(filteredData[0].Rbut_montage) +\r\n            parseInt(filteredData[0].Rbut_export);\r\n\r\n          let finalMontage =\r\n            parseInt(filteredData[0].Montage) +\r\n            parseInt(montage) -\r\n            parseInt(rebut);\r\n\r\n          let encoursBrut =\r\n            parseInt(filteredData[0].D_montage) -\r\n            parseInt(filteredData[0].Montage) -\r\n            parseInt(montage) -\r\n            som_reb;\r\n\r\n          let encoursNet =\r\n            encoursBrut -\r\n            parseInt(filteredData[0].Zingueur) -\r\n            parseInt(filteredData[0].Bloquage);\r\n\r\n          Axios.post(\"http://localhost:3001/montage/updaterow\", {\r\n            montage: qt_mont,\r\n            encoursBrut: encoursBrut,\r\n            encoursNet: encoursNet,\r\n            id: filteredData[0].OF,\r\n            Taux_reb: Taux_reb,\r\n            /////traceability///////\r\n            matricule: userData.matricule,\r\n            user: userData.name,\r\n            produit: filteredData[0].Produit,\r\n            lot: filteredData[0].Lot,\r\n            ref: filteredData[0].R_f_rence,\r\n            table: \"Montage\",\r\n            input_rebut: rebut,\r\n            input_montage: montage,\r\n            comentaire: com,\r\n          });\r\n          notify();\r\n        } else {\r\n          window.alert(\"valeurs invalides !\");\r\n        }\r\n      }\r\n    } else window.alert(\"Choisir un seul ligne !\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"containor\">\r\n      <Toaster />\r\n      <h1 className=\"title bloquage\">Table Montage</h1>\r\n      <p className=\"msg\">Merci De Remplir Les Champs...😃 </p>\r\n      <form className=\"formInter\">\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Lot :</label>\r\n            <input type=\"text\" onChange={(e) => setLot(e.target.value)} />\r\n          </div>\r\n        </div>\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Ordre de Fabrication :</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setOF(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Quantité monté :</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setMontage(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Champ Rebut :</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setRebut(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Commentaire :</label>\r\n            <input type=\"text\" onChange={(e) => setCom(e.target.value)} />\r\n          </div>\r\n        </div>\r\n        <button className=\"buttonUpdate\" onClick={updateRow}>\r\n          Update\r\n        </button>\r\n      </form>\r\n      <GetTable data={filter(data)} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_demontage\\Interface.js",["211","212"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_demontage\\Form.js",["213","214","215"],"import { useContext, useEffect, useState } from \"react\";\r\nimport \"./Form.css\";\r\nimport Axios from \"axios\";\r\nimport GetTable from \"./GetTable\";\r\nimport { GetUser } from \"../../Helper/context\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nfunction Form(props) {\r\n  const notify = () => toast.success(\"Opération Validée\");\r\n\r\n  const [lot, setLot] = useState(\"\");\r\n  const [OF, setOF] = useState(\"\");\r\n  const [cd, setCd] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n  const [com, setCom] = useState(\"\");\r\n\r\n  var retrievedObject = localStorage.getItem(\"object\");\r\n  const userData = JSON.parse(retrievedObject);\r\n\r\n  const getUsers = () => {\r\n    Axios.get(\"http://localhost:3001/data/new_inter\").then((res) => {\r\n      setData(res.data);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  const filter = (rows) => {\r\n    return rows.filter(\r\n      (rows) =>\r\n        rows.OF.toString().toLowerCase().indexOf(OF) === 0 &&\r\n        rows.Lot.toString().toLowerCase().indexOf(lot) === 0\r\n    );\r\n  };\r\n\r\n  const updateRow = () => {\r\n    const filteredData = filter(data);\r\n    if (filteredData.length === 1) {\r\n      console.log(cd);\r\n      if (cd) {\r\n        let Qt_demantage = 0;\r\n        if (filteredData[0].D_montage) {\r\n          Qt_demantage = parseInt(cd) + parseInt(filteredData[0].D_montage);\r\n        } else {\r\n          Qt_demantage = parseInt(cd);\r\n        }\r\n        notify();\r\n        Axios.post(\"http://localhost:3001/demantage/updaterow\", {\r\n          demantage: Qt_demantage,\r\n          id: filteredData[0].OF,\r\n          /////traceability///////\r\n          matricule: userData.matricule,\r\n          user: userData.name,\r\n          produit: filteredData[0].Produit,\r\n          lot: filteredData[0].Lot,\r\n          ref: filteredData[0].R_f_rence,\r\n          table: \"Demantage\",\r\n          input: cd,\r\n          comentaire: com,\r\n        });\r\n      } else {\r\n        window.alert(\"champ vide\");\r\n      }\r\n    } else window.alert(\"Choisir un seul ligne !\");\r\n  };\r\n  // if (!props.state) {\r\n  //   return <Redirect path=\"/login\"></Redirect>;\r\n  // }\r\n  return (\r\n    <div className=\"containor\">\r\n      <Toaster />\r\n      <h1 className=\"title bloquage\">Table Démontage</h1>\r\n      <p className=\"msg\">Merci De Remplir Les Champs...😃 </p>\r\n\r\n      <form className=\"formInter\">\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Lot :</label>\r\n            <input type=\"text\" onChange={(e) => setLot(e.target.value)} />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Ordre de Fabrication :</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setOF(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Qunatité démontée :</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setCd(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Commentaire :</label>\r\n            <input type=\"text\" onChange={(e) => setCom(e.target.value)} />\r\n          </div>\r\n        </div>\r\n\r\n        <button className=\"buttonUpdate\" onClick={updateRow}>\r\n          Update\r\n        </button>\r\n      </form>\r\n      {/* <GetTable data={filter(data)} /> */}\r\n      <GetTable data={filter(data)} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_demontage\\GetTable.js",["216","217","218"],"import { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Table from \"../table/Table\";\r\nimport \"./table.css\";\r\n\r\nfunction GetTable(props) {\r\n    const column = [\r\n      { heading: \"OF\", value: \"OF\" },\r\n      { heading: \"Lot\", value: \"Lot\" },\r\n      { heading: \"Produit\", value: \"Produit\" },\r\n      { heading: \"Référence\", value: \"R_f_rence\" },\r\n      { heading: \"Référence Sorea\", value: \"R_f_rence_Sorea\" },\r\n      { heading: \"E.Brut\", value: \"Encours_Atelier_Brut\" },\r\n      { heading: \"E.Net\", value: \"Encours_Atelier_Net\" },\r\n      { heading: \"Date de commande\", value: \"Date_De_Commande\" },\r\n      { heading: \"Qt Ddée\", value: \"Qt_Dd_e\" },\r\n      { heading: \"Démontage\", value: \"D_montage\" },\r\n      { heading: \"Qt Préparé\", value: \"Qt_prepare\" },\r\n      { heading: \"R.pre\", value: \"Qt_Rebut\" },\r\n      { heading: \"Zingueur\", value: \"Zingueur\" },\r\n      { heading: \"Bloquage\", value: \"Bloquage\" },\r\n      { heading: \"Montage\", value: \"Montage\" },\r\n      { heading: \"R.Montage\", value: \"Rbut_montage\" },\r\n      { heading: \"Qt Exporté\", value: \"Qt_Export\" },\r\n      { heading: \"R.Export\", value: \"Rbut_export\" },\r\n      { heading: \"Observation Prod\", value: \"Observation_Prod\" },\r\n      { heading: \"Taux de Rebut\", value: \"Taux_de_Rebut\" },\r\n    ];\r\n  return <Table data={props.data} column={column} />;\r\n}\r\n\r\nexport default GetTable;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Export\\Interface.js",["219","220"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Export\\Form.js",["221","222","223","224"],"import { useContext, useEffect, useState } from \"react\";\r\nimport \"./Form.css\";\r\nimport Axios from \"axios\";\r\nimport GetTable from \"./GetTable\";\r\nimport { GetUser } from \"../../Helper/context\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nfunction Form(props) {\r\n  const notify = () => toast.success(\"Opération Validée\");\r\n  const [lot, setLot] = useState(\"\");\r\n  const [OF, setOF] = useState(\"\");\r\n  const [rebut, setRebut] = useState(\"\");\r\n  const [exporte, setExport] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n  const [com, setCom] = useState(\"\");\r\n\r\n  var retrievedObject = localStorage.getItem(\"object\");\r\n  const userData = JSON.parse(retrievedObject);\r\n\r\n  const getUsers = () => {\r\n    Axios.get(\"http://localhost:3001/data/new_inter\").then((res) => {\r\n      setData(res.data);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  const filter = (rows) => {\r\n    return rows.filter(\r\n      (rows) =>\r\n        rows.OF.toString().toLowerCase().indexOf(OF) === 0 &&\r\n        rows.Lot.toString().toLowerCase().indexOf(lot) === 0\r\n    );\r\n  };\r\n\r\n  const updateRow = () => {\r\n    const filteredData = filter(data);\r\n\r\n    if (filteredData.length === 1) {\r\n      let Qt_exporte = parseInt(exporte) + parseInt(filteredData[0].Qt_Export);\r\n\r\n      let qt_rebut = parseInt(rebut) + parseInt(filteredData[0].Rbut_export);\r\n\r\n      let Taux_reb =\r\n        ((parseInt(filteredData[0].Qt_Rebut) +\r\n          parseInt(filteredData[0].Rbut_montage) +\r\n          qt_rebut) /\r\n          parseInt(filteredData[0].D_montage)) *\r\n        100;\r\n      let qt_montage =\r\n        parseInt(filteredData[0].Montage) -\r\n        parseInt(filteredData[0].Rbut_montage);\r\n\r\n      let qt_bloquage = parseInt(filteredData[0].Bloquage);\r\n      let test = qt_montage;\r\n\r\n      let som_reb =\r\n        parseInt(filteredData[0].Qt_Rebut) +\r\n        parseInt(filteredData[0].Rbut_montage) +\r\n        qt_rebut;\r\n\r\n      let encoursNet =\r\n        parseInt(filteredData[0].D_montage) -\r\n        parseInt(filteredData[0].Zingueur) -\r\n        parseInt(filteredData[0].Bloquage) -\r\n        som_reb;\r\n\r\n      let encoursBrut =\r\n        parseInt(filteredData[0].D_montage) -\r\n        parseInt(filteredData[0].Montage) -\r\n        som_reb;\r\n\r\n      if (Qt_exporte <= test && test !== 0) {\r\n        Axios.post(\"http://localhost:3001/Export/updaterow\", {\r\n          exporte: Qt_exporte,\r\n          rebut: qt_rebut,\r\n          id: filteredData[0].OF,\r\n          encoursNet: encoursNet,\r\n          encoursBrut: encoursBrut,\r\n          Taux_reb: Taux_reb,\r\n          /////traceability///////\r\n          matricule: userData.matricule,\r\n          user: userData.name,\r\n          produit: filteredData[0].Produit,\r\n          lot: filteredData[0].Lot,\r\n          ref: filteredData[0].R_f_rence,\r\n          table: \"Export\",\r\n          input: exporte,\r\n          comentaire: com,\r\n        });\r\n        notify();\r\n      } else {\r\n        window.alert(\"Valeurs Invalides !\");\r\n      }\r\n    } else window.alert(\"Choisir une seule ligne !\");\r\n  };\r\n  return (\r\n    <div className=\"containor\">\r\n      <Toaster />\r\n      <h1 className=\"title bloquage\">Table Export</h1>\r\n      <p className=\"msg\">Merci De Remplir Les Champs...😃 </p>\r\n      <form className=\"formInter\">\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Lot :</label>\r\n            <input type=\"text\" onChange={(e) => setLot(e.target.value)} />\r\n          </div>\r\n        </div>\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Ordre de Fabrication :</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setOF(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Qunatité Exporté :</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setExport(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Quantité Rebuté :</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setRebut(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Commentaire :</label>\r\n            <input type=\"text\" onChange={(e) => setCom(e.target.value)} />\r\n          </div>\r\n        </div>\r\n        <button className=\"buttonUpdate\" onClick={updateRow}>\r\n          Update\r\n        </button>\r\n      </form>\r\n      <GetTable data={filter(data)} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Export\\GetTable.js",["225","226","227"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Users_table\\users.js",[],["228","229"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\table\\users_table.js",[],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\NavBar\\navBarTest.js",["230"],"import { Route, NavLink } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport Navbar from \"./navBar\";\r\nimport Bloquage from \"../Update_Bloquage/Interface\";\r\nimport Users from \"../Form/Form\";\r\nimport Demontage from \"../Update_demontage/Interface\";\r\nimport Prep from \"../Update_QP_QR/Interface\";\r\nimport Zinguage from \"../Update_Zinguage/Interface\";\r\nimport Montage from \"../Update_Montage/Interface\";\r\nimport Export from \"../Update_Export/Interface\";\r\nimport Upload from \"../Upload_file/upload\";\r\nimport Traceability from \"../Traceability Table/Interface\";\r\nfunction navBarTest() {\r\n  return (\r\n    <div>\r\n      <nav className=\"navBar\">\r\n        <ul>\r\n          <li>\r\n            <NavLink className=\"link\" to=\"/interface/upload\">\r\n              Upload\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact className=\"link\" to=\"/interface/utilisateur\">\r\n              Utilisateur\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink className=\"link\" to=\"/demontage\">\r\n              Demontage\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink className=\"link\" to=\"/preparation\">\r\n              Preparation\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink className=\"link\" to=\"/bloquage\">\r\n              Bloquage\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink className=\"link\" to=\"/zinguage\">\r\n              Zinguage\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink className=\"link\" to=\"/montage\">\r\n              Montage\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink className=\"link\" to=\"/export\">\r\n              Export\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink className=\"link\" to=\"/traceability\">\r\n              Tableau de tracabilité\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      {/* <Navbar></Navbar> */}\r\n      <main>\r\n        <Route path=\"/interface/upload\">\r\n          <Upload></Upload>\r\n        </Route>\r\n        <Route path=\"/interface/utilisateur\">\r\n          <Users></Users>\r\n        </Route>\r\n        <Route path=\"/demontage\">\r\n          <Demontage></Demontage>\r\n        </Route>\r\n        <Route path=\"/preparation\">\r\n          <Prep></Prep>\r\n        </Route>\r\n        <Route path=\"/bloquage\">\r\n          <Bloquage></Bloquage>\r\n        </Route>\r\n        <Route path=\"/zinguage\">\r\n          <Zinguage></Zinguage>\r\n        </Route>\r\n        <Route path=\"/montage\">\r\n          <Montage></Montage>\r\n        </Route>\r\n        <Route path=\"/export\">\r\n          <Export></Export>\r\n        </Route>\r\n        <Route path=\"/traceability\">\r\n          <Traceability></Traceability>\r\n        </Route>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default navBarTest;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\NavBar\\navBar.js",["231","232"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_QP_QR\\Interface.js",["233","234"],"import Form from \"./Form\";\r\nimport GetTable from \"./GetTable\";\r\nimport Navbar from \"../NavBar/nav\";\r\nimport \"./Interface.css\";\r\n\r\nfunction Interface() {\r\n  return (\r\n    <div>\r\n      {/* <div className=\"addUser\">\r\n        <Navbar />\r\n        <div className=\"sep\"></div> */}\r\n      <Form />\r\n      {/* </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Interface;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_QP_QR\\Form.js",["235","236"],"import { useContext, useEffect, useState } from \"react\";\r\nimport \"./Form.css\";\r\nimport Axios from \"axios\";\r\nimport GetTable from \"./GetTable\";\r\nimport { GetUser } from \"../../Helper/context\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nfunction Form() {\r\n  const notify = () => toast.success(\"Opération Validée\");\r\n  const [lot, setLot] = useState(\"\");\r\n  const [OF, setOF] = useState(\"\");\r\n  const [CR, setCR] = useState(\"\");\r\n  const [CP, setCP] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n  const [com, setCom] = useState(\"\");\r\n\r\n  var retrievedObject = localStorage.getItem(\"object\");\r\n  const userData = JSON.parse(retrievedObject);\r\n\r\n  const updateData = {\r\n    CR: CR,\r\n    CP: CP,\r\n  };\r\n\r\n  const getUsers = () => {\r\n    Axios.get(\"http://localhost:3001/data/new_inter\").then((res) => {\r\n      setData(res.data);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  const filter = (rows) => {\r\n    return rows.filter(\r\n      (rows) =>\r\n        rows.OF.toString().toLowerCase().indexOf(OF) === 0 &&\r\n        rows.Lot.toString().toLowerCase().indexOf(lot) === 0\r\n    );\r\n  };\r\n\r\n  const updateRow = () => {\r\n    const filteredData = filter(data);\r\n    let qt_prep;\r\n    let reb;\r\n    if (filteredData.length === 1) {\r\n      if (CR !== null && CP !== null) {\r\n        if (parseInt(CP) > parseInt(filteredData[0].D_montage)) {\r\n          window.alert(\"quantité préparé Supérieur à quantité démonté !\");\r\n        } else {\r\n          if (filteredData[0].Qt_prepare && filteredData[0].Qt_Rebut) {\r\n            qt_prep = parseInt(CP) + parseInt(filteredData[0].Qt_prepare);\r\n            reb = parseInt(CR) + parseInt(filteredData[0].Qt_Rebut);\r\n          } else {\r\n            qt_prep = parseInt(CP);\r\n            reb = parseInt(CR);\r\n          }\r\n          console.log(qt_prep);\r\n\r\n          let Taux_reb =\r\n            ((reb +\r\n              parseInt(filteredData[0].Rbut_montage) +\r\n              parseInt(filteredData[0].Rbut_export)) /\r\n              parseInt(filteredData[0].D_montage)) *\r\n            100;\r\n\r\n          let som_reb =\r\n            reb +\r\n            parseInt(filteredData[0].Rbut_montage) +\r\n            parseInt(filteredData[0].Rbut_export);\r\n\r\n          let encoursNet =\r\n            parseInt(filteredData[0].D_montage) -\r\n            parseInt(filteredData[0].Zingueur) -\r\n            parseInt(filteredData[0].Bloquage) -\r\n            som_reb;\r\n\r\n          let encoursBrut =\r\n            parseInt(filteredData[0].D_montage) -\r\n            parseInt(filteredData[0].Montage) -\r\n            reb;\r\n          Axios.post(\"http://localhost:3001/updaterow\", {\r\n            newCR: reb,\r\n            newCP: qt_prep,\r\n            id: filteredData[0].OF,\r\n            encoursNet: encoursNet,\r\n            encoursBrut: encoursBrut,\r\n            Taux_reb: Taux_reb,\r\n            /////traceability///////\r\n            matricule: userData.matricule,\r\n            user: userData.name,\r\n            produit: filteredData[0].Produit,\r\n            lot: filteredData[0].Lot,\r\n            ref: filteredData[0].R_f_rence,\r\n            table: \"Préparation\",\r\n            input_prep: CP,\r\n            input_rebut: CR,\r\n            comentaire: com,\r\n          });\r\n          notify();\r\n        }\r\n      }\r\n    } else window.alert(\"Choisir un seul ligne !\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"containor\">\r\n      <Toaster />\r\n      <h1 className=\"title bloquage\">Table Préparation</h1>\r\n      <p className=\"msg\">Merci De Remplir Les Champs...😃 </p>\r\n      <form className=\"formInter\">\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Lot :</label>\r\n            <input type=\"text\" onChange={(e) => setLot(e.target.value)} />\r\n          </div>\r\n        </div>\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Ordre de Fabrication :</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setOF(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Quantité préparé :</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setCP(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Champ Rebut :</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setCR(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Commentaire :</label>\r\n            <input type=\"text\" onChange={(e) => setCom(e.target.value)} />\r\n          </div>\r\n        </div>\r\n        <button className=\"buttonUpdate\" onClick={updateRow}>\r\n          Update\r\n        </button>\r\n      </form>\r\n      <GetTable update={updateData} data={filter(data)} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_QP_QR\\GetTable.js",["237","238","239"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Form\\GetTable.js",[],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Form\\users_table.js",[],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Helper\\context.js",["240","241"],"import { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const GetUser = createContext({});\r\nexport const LoginContext = createContext({});\r\nexport const uploadContext = createContext();\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Upload_file\\upload.js",["242","243","244","245","246"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./upload.css\";\r\nimport * as XLSX from \"xlsx\";\r\nimport Axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nfunction Upload(props) {\r\n  const notify = () => toast.success(\"Opération Validée\");\r\n  const [excelFile, setExcelFile] = useState(null);\r\n  const [excelFileError, setExcelFileError] = useState(null);\r\n\r\n  const [excelData, setExcelData] = useState(null);\r\n  const handleFile = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.files) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const data = e.target.result;\r\n        const workbook = XLSX.read(data, { type: \"array\" });\r\n        const sheetName = workbook.SheetNames[0];\r\n        const worksheet = workbook.Sheets[sheetName];\r\n        const json = XLSX.utils.sheet_to_json(worksheet);\r\n        console.log(json);\r\n        setExcelData(json);\r\n        console.log(json.length);\r\n      };\r\n      reader.readAsArrayBuffer(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    Axios.delete(\"http://localhost:3001/deleteTable\");\r\n\r\n    Axios.post(\"http://localhost:3001/excelUpload\", {\r\n      excelData: excelData,\r\n    });\r\n\r\n    notify();\r\n  };\r\n\r\n  if (props.role === \"Consultant\") {\r\n    return <Redirect to=\"/demontage\"></Redirect>;\r\n  }\r\n  return (\r\n    <div className=\"interfaceContainer\">\r\n      <Toaster />\r\n      <h1 className=\"title bloquage\">Upload Page</h1>\r\n      <div className=\"form\">\r\n        <form className=\"formInter\" autoComplete=\"off\" onSubmit={handleSubmit}>\r\n          <label>\r\n            <h5 className=\"title\">Upload Excel file</h5>\r\n          </label>\r\n          <br></br>\r\n          <input\r\n            type=\"file\"\r\n            className=\"form-control\"\r\n            onChange={handleFile}\r\n            required\r\n          ></input>\r\n          <button className=\"buttonUpload\">Submit</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Upload;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Logout_Header\\logout.js",["247","248"],"import React, { useContext } from \"react\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { LoginContext } from \"../../Helper/context\";\r\nimport \"./logout.css\";\r\nimport Logo from \"./PMI-Logo - Copie.png\";\r\n\r\nfunction Logout(props) {\r\n  // const { logedIn, setLogedIn } = useContext(LoginContext);\r\n  const history = useHistory();\r\n\r\n  const logOut = () => {\r\n    window.localStorage.removeItem(\"loggedIn\");\r\n    history.push(\"/login\");\r\n    window.location.reload(false);\r\n    // setLogedIn(false);\r\n  };\r\n  if (!props.state) {\r\n    return <Redirect to=\"/login\"></Redirect>;\r\n  }\r\n  return (\r\n    <div className=\"header\">\r\n      <img className=\"logoLogout\" src={Logo} alt=\"logo\" />\r\n      <button className=\"logOutButton\" onClick={logOut}>\r\n        Deconnecter\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logout;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Traceability Table\\Interface.js",[],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Traceability Table\\Form.js",["249"],{"ruleId":"250","severity":1,"message":"251","line":4,"column":10,"nodeType":"252","messageId":"253","endLine":4,"endColumn":23},{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","replacedBy":"257"},{"ruleId":"250","severity":1,"message":"258","line":4,"column":10,"nodeType":"252","messageId":"253","endLine":4,"endColumn":22},{"ruleId":"250","severity":1,"message":"259","line":4,"column":24,"nodeType":"252","messageId":"253","endLine":4,"endColumn":31},{"ruleId":"250","severity":1,"message":"260","line":5,"column":10,"nodeType":"252","messageId":"253","endLine":5,"endColumn":21},{"ruleId":"250","severity":1,"message":"261","line":5,"column":23,"nodeType":"252","messageId":"253","endLine":5,"endColumn":33},{"ruleId":"250","severity":1,"message":"262","line":5,"column":35,"nodeType":"252","messageId":"253","endLine":5,"endColumn":44},{"ruleId":"250","severity":1,"message":"263","line":5,"column":46,"nodeType":"252","messageId":"253","endLine":5,"endColumn":54},{"ruleId":"250","severity":1,"message":"264","line":16,"column":8,"nodeType":"252","messageId":"253","endLine":16,"endColumn":19},{"ruleId":"250","severity":1,"message":"265","line":5,"column":10,"nodeType":"252","messageId":"253","endLine":5,"endColumn":18},{"ruleId":"250","severity":1,"message":"258","line":6,"column":19,"nodeType":"252","messageId":"253","endLine":6,"endColumn":31},{"ruleId":"250","severity":1,"message":"266","line":10,"column":11,"nodeType":"252","messageId":"253","endLine":10,"endColumn":19},{"ruleId":"250","severity":1,"message":"267","line":10,"column":21,"nodeType":"252","messageId":"253","endLine":10,"endColumn":32},{"ruleId":"250","severity":1,"message":"261","line":1,"column":10,"nodeType":"252","messageId":"253","endLine":1,"endColumn":20},{"ruleId":"250","severity":1,"message":"262","line":1,"column":22,"nodeType":"252","messageId":"253","endLine":1,"endColumn":31},{"ruleId":"250","severity":1,"message":"265","line":1,"column":10,"nodeType":"252","messageId":"253","endLine":1,"endColumn":18},{"ruleId":"250","severity":1,"message":"268","line":1,"column":20,"nodeType":"252","messageId":"253","endLine":1,"endColumn":24},{"ruleId":"250","severity":1,"message":"269","line":3,"column":25,"nodeType":"252","messageId":"253","endLine":3,"endColumn":30},{"ruleId":"254","replacedBy":"270"},{"ruleId":"256","replacedBy":"271"},{"ruleId":"250","severity":1,"message":"272","line":2,"column":8,"nodeType":"252","messageId":"253","endLine":2,"endColumn":16},{"ruleId":"250","severity":1,"message":"273","line":3,"column":8,"nodeType":"252","messageId":"253","endLine":3,"endColumn":14},{"ruleId":"250","severity":1,"message":"262","line":1,"column":10,"nodeType":"252","messageId":"253","endLine":1,"endColumn":19},{"ruleId":"250","severity":1,"message":"263","line":1,"column":21,"nodeType":"252","messageId":"253","endLine":1,"endColumn":29},{"ruleId":"250","severity":1,"message":"274","line":2,"column":8,"nodeType":"252","messageId":"253","endLine":2,"endColumn":13},{"ruleId":"250","severity":1,"message":"261","line":1,"column":10,"nodeType":"252","messageId":"253","endLine":1,"endColumn":20},{"ruleId":"250","severity":1,"message":"259","line":5,"column":10,"nodeType":"252","messageId":"253","endLine":5,"endColumn":17},{"ruleId":"250","severity":1,"message":"275","line":43,"column":13,"nodeType":"252","messageId":"253","endLine":43,"endColumn":25},{"ruleId":"250","severity":1,"message":"272","line":2,"column":8,"nodeType":"252","messageId":"253","endLine":2,"endColumn":16},{"ruleId":"250","severity":1,"message":"273","line":3,"column":8,"nodeType":"252","messageId":"253","endLine":3,"endColumn":14},{"ruleId":"250","severity":1,"message":"261","line":1,"column":10,"nodeType":"252","messageId":"253","endLine":1,"endColumn":20},{"ruleId":"250","severity":1,"message":"259","line":5,"column":10,"nodeType":"252","messageId":"253","endLine":5,"endColumn":17},{"ruleId":"250","severity":1,"message":"262","line":1,"column":10,"nodeType":"252","messageId":"253","endLine":1,"endColumn":19},{"ruleId":"250","severity":1,"message":"263","line":1,"column":21,"nodeType":"252","messageId":"253","endLine":1,"endColumn":29},{"ruleId":"250","severity":1,"message":"274","line":2,"column":8,"nodeType":"252","messageId":"253","endLine":2,"endColumn":13},{"ruleId":"250","severity":1,"message":"272","line":2,"column":8,"nodeType":"252","messageId":"253","endLine":2,"endColumn":16},{"ruleId":"250","severity":1,"message":"273","line":3,"column":8,"nodeType":"252","messageId":"253","endLine":3,"endColumn":14},{"ruleId":"250","severity":1,"message":"262","line":1,"column":10,"nodeType":"252","messageId":"253","endLine":1,"endColumn":19},{"ruleId":"250","severity":1,"message":"263","line":1,"column":21,"nodeType":"252","messageId":"253","endLine":1,"endColumn":29},{"ruleId":"250","severity":1,"message":"274","line":2,"column":8,"nodeType":"252","messageId":"253","endLine":2,"endColumn":13},{"ruleId":"250","severity":1,"message":"261","line":1,"column":10,"nodeType":"252","messageId":"253","endLine":1,"endColumn":20},{"ruleId":"250","severity":1,"message":"259","line":5,"column":10,"nodeType":"252","messageId":"253","endLine":5,"endColumn":17},{"ruleId":"250","severity":1,"message":"276","line":64,"column":15,"nodeType":"252","messageId":"253","endLine":64,"endColumn":27},{"ruleId":"250","severity":1,"message":"272","line":2,"column":8,"nodeType":"252","messageId":"253","endLine":2,"endColumn":16},{"ruleId":"250","severity":1,"message":"273","line":3,"column":8,"nodeType":"252","messageId":"253","endLine":3,"endColumn":14},{"ruleId":"250","severity":1,"message":"261","line":1,"column":10,"nodeType":"252","messageId":"253","endLine":1,"endColumn":20},{"ruleId":"250","severity":1,"message":"259","line":5,"column":10,"nodeType":"252","messageId":"253","endLine":5,"endColumn":17},{"ruleId":"250","severity":1,"message":"265","line":6,"column":10,"nodeType":"252","messageId":"253","endLine":6,"endColumn":18},{"ruleId":"250","severity":1,"message":"262","line":1,"column":10,"nodeType":"252","messageId":"253","endLine":1,"endColumn":19},{"ruleId":"250","severity":1,"message":"263","line":1,"column":21,"nodeType":"252","messageId":"253","endLine":1,"endColumn":29},{"ruleId":"250","severity":1,"message":"274","line":2,"column":8,"nodeType":"252","messageId":"253","endLine":2,"endColumn":13},{"ruleId":"250","severity":1,"message":"272","line":2,"column":8,"nodeType":"252","messageId":"253","endLine":2,"endColumn":16},{"ruleId":"250","severity":1,"message":"273","line":3,"column":8,"nodeType":"252","messageId":"253","endLine":3,"endColumn":14},{"ruleId":"250","severity":1,"message":"261","line":1,"column":10,"nodeType":"252","messageId":"253","endLine":1,"endColumn":20},{"ruleId":"250","severity":1,"message":"259","line":5,"column":10,"nodeType":"252","messageId":"253","endLine":5,"endColumn":17},{"ruleId":"250","severity":1,"message":"265","line":6,"column":10,"nodeType":"252","messageId":"253","endLine":6,"endColumn":18},{"ruleId":"250","severity":1,"message":"277","line":56,"column":11,"nodeType":"252","messageId":"253","endLine":56,"endColumn":22},{"ruleId":"250","severity":1,"message":"262","line":1,"column":10,"nodeType":"252","messageId":"253","endLine":1,"endColumn":19},{"ruleId":"250","severity":1,"message":"263","line":1,"column":21,"nodeType":"252","messageId":"253","endLine":1,"endColumn":29},{"ruleId":"250","severity":1,"message":"274","line":2,"column":8,"nodeType":"252","messageId":"253","endLine":2,"endColumn":13},{"ruleId":"254","replacedBy":"278"},{"ruleId":"256","replacedBy":"279"},{"ruleId":"250","severity":1,"message":"273","line":3,"column":8,"nodeType":"252","messageId":"253","endLine":3,"endColumn":14},{"ruleId":"250","severity":1,"message":"261","line":1,"column":17,"nodeType":"252","messageId":"253","endLine":1,"endColumn":27},{"ruleId":"250","severity":1,"message":"259","line":3,"column":10,"nodeType":"252","messageId":"253","endLine":3,"endColumn":17},{"ruleId":"250","severity":1,"message":"272","line":2,"column":8,"nodeType":"252","messageId":"253","endLine":2,"endColumn":16},{"ruleId":"250","severity":1,"message":"273","line":3,"column":8,"nodeType":"252","messageId":"253","endLine":3,"endColumn":14},{"ruleId":"250","severity":1,"message":"261","line":1,"column":10,"nodeType":"252","messageId":"253","endLine":1,"endColumn":20},{"ruleId":"250","severity":1,"message":"259","line":5,"column":10,"nodeType":"252","messageId":"253","endLine":5,"endColumn":17},{"ruleId":"250","severity":1,"message":"262","line":1,"column":10,"nodeType":"252","messageId":"253","endLine":1,"endColumn":19},{"ruleId":"250","severity":1,"message":"263","line":1,"column":21,"nodeType":"252","messageId":"253","endLine":1,"endColumn":29},{"ruleId":"250","severity":1,"message":"274","line":2,"column":8,"nodeType":"252","messageId":"253","endLine":2,"endColumn":13},{"ruleId":"250","severity":1,"message":"262","line":1,"column":25,"nodeType":"252","messageId":"253","endLine":1,"endColumn":34},{"ruleId":"250","severity":1,"message":"263","line":1,"column":36,"nodeType":"252","messageId":"253","endLine":1,"endColumn":44},{"ruleId":"250","severity":1,"message":"262","line":1,"column":17,"nodeType":"252","messageId":"253","endLine":1,"endColumn":26},{"ruleId":"250","severity":1,"message":"280","line":9,"column":10,"nodeType":"252","messageId":"253","endLine":9,"endColumn":19},{"ruleId":"250","severity":1,"message":"281","line":9,"column":21,"nodeType":"252","messageId":"253","endLine":9,"endColumn":33},{"ruleId":"250","severity":1,"message":"282","line":10,"column":10,"nodeType":"252","messageId":"253","endLine":10,"endColumn":24},{"ruleId":"250","severity":1,"message":"283","line":10,"column":26,"nodeType":"252","messageId":"253","endLine":10,"endColumn":43},{"ruleId":"250","severity":1,"message":"261","line":1,"column":17,"nodeType":"252","messageId":"253","endLine":1,"endColumn":27},{"ruleId":"250","severity":1,"message":"258","line":3,"column":10,"nodeType":"252","messageId":"253","endLine":3,"endColumn":22},{"ruleId":"250","severity":1,"message":"284","line":4,"column":3,"nodeType":"252","messageId":"253","endLine":4,"endColumn":21},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["285"],"no-negated-in-lhs",["286"],"'LoginContext' is defined but never used.","'GetUser' is defined but never used.","'useCallback' is defined but never used.","'useContext' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'UserLogedIn' is defined but never used.","'Redirect' is defined but never used.","'userData' is assigned a value but never used.","'setUserData' is assigned a value but never used.","'Rout' is defined but never used.","'Route' is defined but never used.",["285"],["286"],"'GetTable' is defined but never used.","'Navbar' is defined but never used.","'Axios' is defined but never used.","'zinguageBrut' is assigned a value but never used.","'finalMontage' is assigned a value but never used.","'qt_bloquage' is assigned a value but never used.",["285"],["286"],"'excelFile' is assigned a value but never used.","'setExcelFile' is assigned a value but never used.","'excelFileError' is assigned a value but never used.","'setExcelFileError' is assigned a value but never used.","'DownloadTableExcel' is defined but never used.","no-global-assign","no-unsafe-negation"]
[{"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\index.js":"1","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\App.js":"2","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Login page\\login.js":"3","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Form\\Form.js":"4","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\NavBar\\nav.js":"5","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\table\\GetTable.js":"6","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\table\\Table.js":"7","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Zinguage\\Interface.js":"8","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Zinguage\\GetTable.js":"9","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Zinguage\\Form.js":"10","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Bloquage\\Interface.js":"11","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Bloquage\\Form.js":"12","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Bloquage\\GetTable.js":"13","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Montage\\Interface.js":"14","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Montage\\GetTable.js":"15","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Montage\\Form.js":"16","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_demontage\\Interface.js":"17","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_demontage\\Form.js":"18","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_demontage\\GetTable.js":"19","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Export\\Interface.js":"20","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Export\\Form.js":"21","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Export\\GetTable.js":"22","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Users_table\\users.js":"23","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\table\\users_table.js":"24","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\NavBar\\navBarTest.js":"25","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\NavBar\\navBar.js":"26","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_QP_QR\\Interface.js":"27","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_QP_QR\\Form.js":"28","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_QP_QR\\GetTable.js":"29","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Form\\GetTable.js":"30","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Form\\users_table.js":"31","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Helper\\context.js":"32","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Upload_file\\upload.js":"33","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Logout_Header\\logout.js":"34","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Traceability Table\\Interface.js":"35","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Traceability Table\\Form.js":"36"},{"size":124,"mtime":1661875822932,"results":"37","hashOfConfig":"38"},{"size":961,"mtime":1661977382998,"results":"39","hashOfConfig":"38"},{"size":1936,"mtime":1661979060232,"results":"40","hashOfConfig":"38"},{"size":2419,"mtime":1662026489475,"results":"41","hashOfConfig":"38"},{"size":461,"mtime":1661981820726,"results":"42","hashOfConfig":"38"},{"size":681,"mtime":1661108150033,"results":"43","hashOfConfig":"38"},{"size":791,"mtime":1661710722495,"results":"44","hashOfConfig":"38"},{"size":243,"mtime":1660837200203,"results":"45","hashOfConfig":"38"},{"size":1354,"mtime":1661103670117,"results":"46","hashOfConfig":"38"},{"size":3218,"mtime":1662051929042,"results":"47","hashOfConfig":"38"},{"size":243,"mtime":1661709284101,"results":"48","hashOfConfig":"38"},{"size":3330,"mtime":1662051870539,"results":"49","hashOfConfig":"38"},{"size":1354,"mtime":1661103710427,"results":"50","hashOfConfig":"38"},{"size":243,"mtime":1661709338320,"results":"51","hashOfConfig":"38"},{"size":1354,"mtime":1661102251254,"results":"52","hashOfConfig":"38"},{"size":3579,"mtime":1662051094989,"results":"53","hashOfConfig":"38"},{"size":243,"mtime":1661709302325,"results":"54","hashOfConfig":"38"},{"size":2825,"mtime":1662049563044,"results":"55","hashOfConfig":"38"},{"size":1354,"mtime":1661103695264,"results":"56","hashOfConfig":"38"},{"size":243,"mtime":1661709347029,"results":"57","hashOfConfig":"38"},{"size":3305,"mtime":1662050067090,"results":"58","hashOfConfig":"38"},{"size":1353,"mtime":1661104829143,"results":"59","hashOfConfig":"38"},{"size":307,"mtime":1661699320920,"results":"60","hashOfConfig":"38"},{"size":1385,"mtime":1661709689885,"results":"61","hashOfConfig":"38"},{"size":1487,"mtime":1662067525435,"results":"62","hashOfConfig":"38"},{"size":1539,"mtime":1662067481457,"results":"63","hashOfConfig":"38"},{"size":363,"mtime":1660318117846,"results":"64","hashOfConfig":"38"},{"size":3340,"mtime":1662051442210,"results":"65","hashOfConfig":"38"},{"size":1354,"mtime":1661103657566,"results":"66","hashOfConfig":"38"},{"size":681,"mtime":1661719774818,"results":"67","hashOfConfig":"38"},{"size":1385,"mtime":1661720338992,"results":"68","hashOfConfig":"38"},{"size":131,"mtime":1661977081592,"results":"69","hashOfConfig":"38"},{"size":199,"mtime":1661891159894,"results":"70","hashOfConfig":"38"},{"size":508,"mtime":1661894608729,"results":"71","hashOfConfig":"38"},{"size":170,"mtime":1662067571716,"results":"72","hashOfConfig":"38"},{"size":2115,"mtime":1662070421009,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"177r9lg",{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"76"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\index.js",[],["161","162"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\App.js",[],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Login page\\login.js",["163","164"],"import { useContext, useState } from \"react\";\r\nimport Logo from \"./PMI-Logo - Copie.png\";\r\nimport Axios from \"axios\";\r\nimport \"./login.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { GetUser, LoginContext } from \"../../Helper/context\";\r\n\r\nfunction Login() {\r\n  const { logedIn, setLogedIn } = useContext(LoginContext);\r\n  const { userData, setUserData } = useContext(GetUser);\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const login = (e) => {\r\n    e.preventDefault();\r\n    Axios.get(`http://localhost:3001/login/${name}-${password}`).then(\r\n      (response) => {\r\n        if (response.data[0] === \"yes\") {\r\n          setLogedIn(true);\r\n          setUserData({\r\n            name: response.data[1].userName,\r\n            matricule: response.data[1].matricule,\r\n          });\r\n          history.push(\"/interface\");\r\n        } else {\r\n          setLogedIn(false);\r\n          alert(\"wrong informations\");\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"body\">\r\n      <div className=\"loginContainer\">\r\n        <img className=\"imgLogin\" src={Logo} alt=\"logo\" />\r\n        <form className=\"formLogin\">\r\n          <label className=\"labelLogin\">Nom d'utilisateur</label>\r\n          <input\r\n            className=\"inputLogin\"\r\n            type=\"test\"\r\n            required\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n          <label className=\"labelLogin\">Mot de passe</label>\r\n          <input\r\n            className=\"inputLogin\"\r\n            type=\"password\"\r\n            required\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <button className=\"buttonLogin\" onClick={login}>\r\n            Connexion\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n// }\r\n\r\nexport default Login;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Form\\Form.js",[],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\NavBar\\nav.js",["165","166"],"import { Redirect, Rout } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport Nav from \"./navBarTest\";\r\nimport \"./interface.css\";\r\n\r\nfunction nav(props) {\r\n  if (!props.state) {\r\n    return <Redirect to=\"/login\"></Redirect>;\r\n  }\r\n  return (\r\n    <BrowserRouter>\r\n      <Redirect to=\"/interface/utilisateur\"></Redirect>\r\n      <Nav></Nav>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default nav;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\table\\GetTable.js",[],["167","168"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\table\\Table.js",[],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Zinguage\\Interface.js",["169","170"],"import Form from \"./Form\";\r\nimport GetTable from \"./GetTable\";\r\nimport Navbar from \"../NavBar/nav\";\r\nimport \"./Interface.css\";\r\n\r\nfunction Interface() {\r\n  return (\r\n    <div>\r\n      <Form />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Interface;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Zinguage\\GetTable.js",["171","172","173"],"import { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Table from \"../table/Table\";\r\nimport \"./table.css\";\r\n\r\nfunction GetTable(props) {\r\n  const column = [\r\n    { heading: \"OF\", value: \"OF\" },\r\n    { heading: \"Lot\", value: \"Lot\" },\r\n    { heading: \"Produit\", value: \"Produit\" },\r\n    { heading: \"Référence\", value: \"R_f_rence\" },\r\n    { heading: \"Référence Sorea\", value: \"R_f_rence_Sorea\" },\r\n    { heading: \"Date de commande\", value: \"Date_De_Commande\" },\r\n    { heading: \"Qt Ddée\", value: \"Qt_Dd_e\" },\r\n    { heading: \"Démontage\", value: \"D_montage\" },\r\n    { heading: \"Qt Préparé\", value: \"Qt_prepare\" },\r\n    { heading: \"R.pre\", value: \"Qt_Rebut\" },\r\n    { heading: \"Bloquage\", value: \"Bloquage\" },\r\n    { heading: \"Zingueur\", value: \"Zingueur\" },\r\n    { heading: \"Montage\", value: \"Montage\" },\r\n    { heading: \"R.Montage\", value: \"Rebut_montage\" },\r\n    { heading: \"Qt Exporté\", value: \"Qt_Export\" },\r\n    { heading: \"R.Export\", value: \"Rebut_export\" },\r\n    { heading: \"Encours Atelier Brut\", value: \"Encours_Atelier_Brut\" },\r\n    { heading: \"Encours Atelier Net\", value: \"Encours_Atelier_Net\" },\r\n    { heading: \"Rest à Exporter\", value: \"Rest_Exporter\" },\r\n    { heading: \"Taux de Rebut\", value: \"Taux_De_Rebut\" },\r\n  ];\r\n  return <Table data={props.data} column={column} />;\r\n}\r\n\r\nexport default GetTable;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Zinguage\\Form.js",["174"],"import { useContext, useEffect, useState } from \"react\";\r\nimport \"./Form.css\";\r\nimport Axios from \"axios\";\r\nimport GetTable from \"./GetTable\";\r\nimport { GetUser } from \"../../Helper/context\";\r\n\r\nfunction Form() {\r\n  const [lot, setLot] = useState(\"\");\r\n  const [OF, setOF] = useState(\"\");\r\n  const [Qt_tr, setQtTr] = useState(\"\");\r\n  const [Qt_lib, setQtLib] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n  const [com, setCom] = useState(\"\");\r\n  const { userData, setUserData } = useContext(GetUser);\r\n  const getUsers = () => {\r\n    Axios.get(\"http://localhost:3001/data/new_inter\").then((res) => {\r\n      setData(res.data);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  const filter = (rows) => {\r\n    return rows.filter(\r\n      (rows) =>\r\n        rows.OF.toString().toLowerCase().indexOf(OF) === 0 &&\r\n        rows.Lot.toString().toLowerCase().indexOf(lot) === 0\r\n    );\r\n  };\r\n\r\n  const updateRow = () => {\r\n    const filteredData = filter(data);\r\n\r\n    if (filteredData.length === 1) {\r\n      if (Qt_lib !== null && Qt_tr !== null) {\r\n        var Qt_zinguage = parseInt(Qt_tr) - parseInt(Qt_lib);\r\n        Axios.post(\"http://localhost:3001/zinguage/updaterow\", {\r\n          zinguage: Qt_zinguage,\r\n          id: filteredData[0].OF,\r\n          /////traceability///////\r\n          matricule: userData.matricule,\r\n          user: userData.name,\r\n          produit: filteredData[0].Produit,\r\n          lot: filteredData[0].Lot,\r\n          ref: filteredData[0].R_f_rence,\r\n          table: \"Zinguage\",\r\n          input_transfer: Qt_tr,\r\n          input_libere: Qt_lib,\r\n          comentaire: com,\r\n        });\r\n      }\r\n    } else window.alert(\"Choisir un seul ligne !\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"containor\">\r\n      <form className=\"formInter\">\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Lot</label>\r\n            <input type=\"text\" onChange={(e) => setLot(e.target.value)} />\r\n          </div>\r\n        </div>\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Ordre de Fabrication</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setOF(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Qunatité Transféré</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setQtTr(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Quantité Liberé</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setQtLib(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Commentaire</label>\r\n            <input type=\"text\" onChange={(e) => setCom(e.target.value)} />\r\n          </div>\r\n        </div>\r\n        <button className=\"buttonUpdate\" onClick={updateRow}>\r\n          Update\r\n        </button>\r\n      </form>\r\n      <GetTable data={filter(data)} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Bloquage\\Interface.js",["175","176"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Bloquage\\Form.js",["177"],"import { useContext, useEffect, useState } from \"react\";\r\nimport \"./Form.css\";\r\nimport Axios from \"axios\";\r\nimport GetTable from \"./GetTable\";\r\nimport { GetUser } from \"../../Helper/context\";\r\n\r\nfunction Form() {\r\n  const [lot, setLot] = useState(\"\");\r\n  const [OF, setOF] = useState(\"\");\r\n  const [Qt_tr, setQtTr] = useState(\"\");\r\n  const [Qt_lib, setQtLib] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n  const [com, setCom] = useState(\"\");\r\n\r\n  const { userData, setUserData } = useContext(GetUser);\r\n\r\n  const getUsers = () => {\r\n    Axios.get(\"http://localhost:3001/data/new_inter\").then((res) => {\r\n      setData(res.data);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  const filter = (rows) => {\r\n    return rows.filter(\r\n      (rows) =>\r\n        rows.OF.toString().toLowerCase().indexOf(OF) === 0 &&\r\n        rows.Lot.toString().toLowerCase().indexOf(lot) === 0\r\n    );\r\n  };\r\n\r\n  const updateRow = () => {\r\n    const filteredData = filter(data);\r\n\r\n    if (filteredData.length === 1) {\r\n      if (Qt_lib !== null && Qt_tr !== null) {\r\n        var Qt_zinguage =\r\n          parseInt(Qt_tr) -\r\n          parseInt(Qt_lib) +\r\n          parseInt(filteredData[0].Bloquage);\r\n        Axios.post(\"http://localhost:3001/bloquage/updaterow\", {\r\n          zinguage: Qt_zinguage,\r\n          id: filteredData[0].OF,\r\n          /////traceability///////\r\n          matricule: userData.matricule,\r\n          user: userData.name,\r\n          produit: filteredData[0].Produit,\r\n          lot: filteredData[0].Lot,\r\n          ref: filteredData[0].R_f_rence,\r\n          table: \"Bloquage\",\r\n          input_transfer: Qt_tr,\r\n          input_libere: Qt_lib,\r\n          comentaire: com,\r\n        });\r\n      }\r\n    } else window.alert(\"Choisir un seul ligne !\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"containor\">\r\n      <form className=\"formInter\">\r\n        <div>\r\n          <div className=\"formCell\">\r\n            <div className=\"field\">\r\n              <label>Lot</label>\r\n              <input type=\"text\" onChange={(e) => setLot(e.target.value)} />\r\n            </div>\r\n          </div>\r\n          <div className=\"formCell\">\r\n            <div className=\"field\">\r\n              <label>Ordre de Fabrication</label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                onChange={(e) => setOF(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"field\">\r\n              <label>Qunatité Transféré</label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                onChange={(e) => setQtTr(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"formCell\">\r\n            <div className=\"field\">\r\n              <label>Quantité Liberé</label>\r\n              <input type=\"text\" onChange={(e) => setQtLib(e.target.value)} />\r\n            </div>\r\n            <div className=\"field\">\r\n              <label>Commentaire</label>\r\n              <input type=\"text\" onChange={(e) => setCom(e.target.value)} />\r\n            </div>\r\n          </div>\r\n          <button className=\"buttonUpdate\" onClick={updateRow}>\r\n            Update\r\n          </button>\r\n        </div>\r\n      </form>\r\n      <GetTable data={filter(data)} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Bloquage\\GetTable.js",["178","179","180"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Montage\\Interface.js",["181","182"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Montage\\GetTable.js",["183","184","185"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Montage\\Form.js",["186"],"import { useContext, useEffect, useState } from \"react\";\r\nimport \"./Form.css\";\r\nimport Axios from \"axios\";\r\nimport GetTable from \"./GetTable\";\r\nimport { GetUser } from \"../../Helper/context\";\r\n\r\nfunction Form() {\r\n  const [lot, setLot] = useState(\"\");\r\n  const [OF, setOF] = useState(\"\");\r\n  const [montage, setMontage] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n  const [rebut, setRebut] = useState(\"\");\r\n  const [com, setCom] = useState(\"\");\r\n\r\n  const { userData, setUserData } = useContext(GetUser);\r\n\r\n  const getUsers = () => {\r\n    Axios.get(\"http://localhost:3001/data/new_inter\").then((res) => {\r\n      setData(res.data);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  const filter = (rows) => {\r\n    return rows.filter(\r\n      (rows) =>\r\n        rows.OF.toString().toLowerCase().indexOf(OF) === 0 &&\r\n        rows.Lot.toString().toLowerCase().indexOf(lot) === 0\r\n    );\r\n  };\r\n\r\n  const updateRow = () => {\r\n    const filteredData = filter(data);\r\n\r\n    if (filteredData.length === 1) {\r\n      if (montage !== null && rebut !== null) {\r\n        const calcMontage = parseInt(montage) - parseInt(rebut);\r\n        const finalMontage =\r\n          parseInt(filteredData[0].Montage) + parseInt(calcMontage);\r\n        const encoursBrut = parseInt(filteredData[0].Qt_prepare) - finalMontage;\r\n        const encoursNet =\r\n          parseInt(filteredData[0].Qt_prepare) -\r\n          parseInt(filteredData[0].Zingueur) -\r\n          parseInt(filteredData[0].Bloquage);\r\n        Axios.post(\"http://localhost:3001/montage/updaterow\", {\r\n          montage: finalMontage,\r\n          encoursBrut: encoursBrut,\r\n          encoursNet: encoursNet,\r\n          id: filteredData[0].OF,\r\n          /////traceability///////\r\n          matricule: userData.matricule,\r\n          user: userData.name,\r\n          produit: filteredData[0].Produit,\r\n          lot: filteredData[0].Lot,\r\n          ref: filteredData[0].R_f_rence,\r\n          table: \"Montage\",\r\n          input_rebut: rebut,\r\n          input_montage: montage,\r\n          comentaire: com,\r\n        });\r\n      }\r\n    } else window.alert(\"Choisir un seul ligne !\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"containor\">\r\n      <form className=\"formInter\">\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Lot</label>\r\n            <input type=\"text\" onChange={(e) => setLot(e.target.value)} />\r\n          </div>\r\n        </div>\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Ordre de Fabrication</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setOF(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Quantité monté</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setMontage(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Champ Rebut</label>\r\n            <input type=\"text\" onChange={(e) => setRebut(e.target.value)} />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Commentaire</label>\r\n            <input type=\"text\" onChange={(e) => setCom(e.target.value)} />\r\n          </div>\r\n        </div>\r\n        <button className=\"buttonUpdate\" onClick={updateRow}>\r\n          Update\r\n        </button>\r\n      </form>\r\n      <GetTable data={filter(data)} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_demontage\\Interface.js",["187","188"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_demontage\\Form.js",["189"],"import { useContext, useEffect, useState } from \"react\";\r\nimport \"./Form.css\";\r\nimport Axios from \"axios\";\r\nimport GetTable from \"./GetTable\";\r\nimport { GetUser } from \"../../Helper/context\";\r\n\r\nfunction Form() {\r\n  const [lot, setLot] = useState(\"\");\r\n  const [OF, setOF] = useState(\"\");\r\n  const [cd, setCd] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n  const [com, setCom] = useState(\"\");\r\n\r\n  const { userData, setUserData } = useContext(GetUser);\r\n  const getUsers = () => {\r\n    Axios.get(\"http://localhost:3001/data/new_inter\").then((res) => {\r\n      setData(res.data);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  const filter = (rows) => {\r\n    return rows.filter(\r\n      (rows) =>\r\n        rows.OF.toString().toLowerCase().indexOf(OF) === 0 &&\r\n        rows.Lot.toString().toLowerCase().indexOf(lot) === 0\r\n    );\r\n  };\r\n\r\n  const updateRow = () => {\r\n    const filteredData = filter(data);\r\n\r\n    if (filteredData.length === 1) {\r\n      if (cd !== null) {\r\n        var Qt_demantage = parseInt(cd) + parseInt(filteredData[0].D_montage);\r\n        Axios.post(\"http://localhost:3001/demantage/updaterow\", {\r\n          demantage: Qt_demantage,\r\n          id: filteredData[0].OF,\r\n          /////traceability///////\r\n          matricule: userData.matricule,\r\n          user: userData.name,\r\n          produit: filteredData[0].Produit,\r\n          lot: filteredData[0].Lot,\r\n          ref: filteredData[0].R_f_rence,\r\n          table: \"Demantage\",\r\n          input: cd,\r\n          comentaire: com,\r\n        });\r\n      }\r\n    } else window.alert(\"Choisir un seul ligne !\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"containor\">\r\n      <form className=\"formInter\">\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Lot</label>\r\n            <input type=\"text\" onChange={(e) => setLot(e.target.value)} />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Ordre de Fabrication</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setOF(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Qunatité demante</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setCd(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Commentaire</label>\r\n            <input type=\"text\" onChange={(e) => setCom(e.target.value)} />\r\n          </div>\r\n        </div>\r\n\r\n        <button className=\"buttonUpdate\" onClick={updateRow}>\r\n          Update\r\n        </button>\r\n      </form>\r\n      <GetTable data={filter(data)} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_demontage\\GetTable.js",["190","191","192"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Export\\Interface.js",["193","194"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Export\\Form.js",["195"],"import { useContext, useEffect, useState } from \"react\";\r\nimport \"./Form.css\";\r\nimport Axios from \"axios\";\r\nimport GetTable from \"./GetTable\";\r\nimport { GetUser } from \"../../Helper/context\";\r\n\r\nfunction Form() {\r\n  const [lot, setLot] = useState(\"\");\r\n  const [OF, setOF] = useState(\"\");\r\n  const [rebut, setRebut] = useState(\"\");\r\n  const [exporte, setExport] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n  const [com, setCom] = useState(\"\");\r\n  const { userData, setUserData } = useContext(GetUser);\r\n\r\n  const getUsers = () => {\r\n    Axios.get(\"http://localhost:3001/data/new_inter\").then((res) => {\r\n      setData(res.data);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  const filter = (rows) => {\r\n    return rows.filter(\r\n      (rows) =>\r\n        rows.OF.toString().toLowerCase().indexOf(OF) === 0 &&\r\n        rows.Lot.toString().toLowerCase().indexOf(lot) === 0\r\n    );\r\n  };\r\n\r\n  const updateRow = () => {\r\n    const filteredData = filter(data);\r\n\r\n    if (filteredData.length === 1) {\r\n      if (rebut !== null && exporte !== null) {\r\n        var Qt_exporte =\r\n          parseInt(exporte) -\r\n          parseInt(rebut) +\r\n          parseInt(filteredData[0].Qt_Export);\r\n        const qt_rebut =\r\n          parseInt(rebut) + parseInt(filteredData[0].Rbut_export);\r\n        Axios.post(\"http://localhost:3001/Export/updaterow\", {\r\n          exporte: Qt_exporte,\r\n          rebut: qt_rebut,\r\n          id: filteredData[0].OF,\r\n\r\n          /////traceability///////\r\n          matricule: userData.matricule,\r\n          user: userData.name,\r\n          produit: filteredData[0].Produit,\r\n          lot: filteredData[0].Lot,\r\n          ref: filteredData[0].R_f_rence,\r\n          table: \"Export\",\r\n          input: exporte,\r\n          comentaire: com,\r\n        });\r\n      }\r\n    } else window.alert(\"Choisir un seul ligne !\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"containor\">\r\n      <form className=\"formInter\">\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Lot</label>\r\n            <input type=\"text\" onChange={(e) => setLot(e.target.value)} />\r\n          </div>\r\n        </div>\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Ordre de Fabrication</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setOF(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Qunatité Exporté</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setExport(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Quantité Rebuté</label>\r\n            <input type=\"text\" onChange={(e) => setRebut(e.target.value)} />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Commentaire</label>\r\n            <input type=\"text\" onChange={(e) => setCom(e.target.value)} />\r\n          </div>\r\n        </div>\r\n        <button className=\"buttonUpdate\" onClick={updateRow}>\r\n          Update\r\n        </button>\r\n      </form>\r\n      <GetTable data={filter(data)} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_Export\\GetTable.js",["196","197","198"],"import { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Table from \"../table/Table\";\r\nimport \"./table.css\";\r\n\r\nfunction GetTable(props) {\r\n  const column = [\r\n    { heading: \"OF\", value: \"OF\" },\r\n    { heading: \"Lot\", value: \"Lot\" },\r\n    { heading: \"Produit\", value: \"Produit\" },\r\n    { heading: \"Référence\", value: \"R_f_rence\" },\r\n    { heading: \"Référence Sorea\", value: \"R_f_rence_Sorea\" },\r\n    { heading: \"Date de commande\", value: \"Date_De_Commande\" },\r\n    { heading: \"Qt Ddée\", value: \"Qt_Dd_e\" },\r\n    { heading: \"Démontage\", value: \"D_montage\" },\r\n    { heading: \"Qt Préparé\", value: \"Qt_prepare\" },\r\n    { heading: \"R.pre\", value: \"Qt_Rebut\" },\r\n    { heading: \"Bloquage\", value: \"Bloquage\" },\r\n    { heading: \"Zingueur\", value: \"Zingueur\" },\r\n    { heading: \"Montage\", value: \"Montage\" },\r\n    { heading: \"R.Montage\", value: \"Rebut_montage\" },\r\n    { heading: \"Qt Exporté\", value: \"Qt_Export\" },\r\n    { heading: \"R.Export\", value: \"Rbut_export\" },\r\n    { heading: \"Encours Atelier Brut\", value: \"Encours_Atelier_Brut\" },\r\n    { heading: \"Encours Atelier Net\", value: \"Encours_Atelier_Net\" },\r\n    { heading: \"Rest à Exporter\", value: \"Rest_Exporter\" },\r\n    { heading: \"Taux de Rebut\", value: \"Taux_De_Rebut\" },\r\n  ];\r\n  return <Table data={props.data} column={column} />;\r\n}\r\n\r\nexport default GetTable;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Users_table\\users.js",[],["199","200"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\table\\users_table.js",[],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\NavBar\\navBarTest.js",[],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\NavBar\\navBar.js",[],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_QP_QR\\Interface.js",["201","202"],"import Form from \"./Form\";\r\nimport GetTable from \"./GetTable\";\r\nimport Navbar from \"../NavBar/nav\";\r\nimport \"./Interface.css\";\r\n\r\nfunction Interface() {\r\n  return (\r\n    <div>\r\n      {/* <div className=\"addUser\">\r\n        <Navbar />\r\n        <div className=\"sep\"></div> */}\r\n      <Form />\r\n      {/* </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Interface;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_QP_QR\\Form.js",["203"],"import { useContext, useEffect, useState } from \"react\";\r\nimport \"./Form.css\";\r\nimport Axios from \"axios\";\r\nimport GetTable from \"./GetTable\";\r\nimport { GetUser } from \"../../Helper/context\";\r\n\r\nfunction Form() {\r\n  const [lot, setLot] = useState(\"\");\r\n  const [OF, setOF] = useState(\"\");\r\n  const [CR, setCR] = useState(\"\");\r\n  const [CP, setCP] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n  const [com, setCom] = useState(\"\");\r\n  const { userData, setUserData } = useContext(GetUser);\r\n\r\n  const updateData = {\r\n    CR: CR,\r\n    CP: CP,\r\n  };\r\n\r\n  const getUsers = () => {\r\n    Axios.get(\"http://localhost:3001/data/new_inter\").then((res) => {\r\n      setData(res.data);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  const filter = (rows) => {\r\n    return rows.filter(\r\n      (rows) =>\r\n        rows.OF.toString().toLowerCase().indexOf(OF) === 0 &&\r\n        rows.Lot.toString().toLowerCase().indexOf(lot) === 0\r\n    );\r\n  };\r\n\r\n  const updateRow = () => {\r\n    const filteredData = filter(data);\r\n\r\n    if (filteredData.length === 1) {\r\n      if (CR !== null && CP !== null) {\r\n        if (parseInt(CR) + parseInt(CP) > parseInt(filteredData[0].D_montage)) {\r\n          window.alert(\"Somme Supérieur à quantité démonté !\");\r\n        } else {\r\n          Axios.post(\"http://localhost:3001/updaterow\", {\r\n            newCR: CR,\r\n            newCP: CP,\r\n            id: filteredData[0].OF,\r\n            /////traceability///////\r\n            matricule: userData.matricule,\r\n            user: userData.name,\r\n            produit: filteredData[0].Produit,\r\n            lot: filteredData[0].Lot,\r\n            ref: filteredData[0].R_f_rence,\r\n            table: \"Préparation\",\r\n            input_prep: CP,\r\n            input_rebut: CR,\r\n            comentaire: com,\r\n          });\r\n        }\r\n      }\r\n    } else window.alert(\"Choisir un seul ligne !\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"containor\">\r\n      <form className=\"formInter\">\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Lot</label>\r\n            <input type=\"text\" onChange={(e) => setLot(e.target.value)} />\r\n          </div>\r\n        </div>\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Ordre de Fabrication</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setOF(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Quantité préparé</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              onChange={(e) => setCP(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"formCell\">\r\n          <div className=\"field\">\r\n            <label>Champ Rebut</label>\r\n            <input type=\"text\" onChange={(e) => setCR(e.target.value)} />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Commentaire</label>\r\n            <input type=\"text\" onChange={(e) => setCom(e.target.value)} />\r\n          </div>\r\n        </div>\r\n        <button className=\"buttonUpdate\" onClick={updateRow}>\r\n          Update\r\n        </button>\r\n      </form>\r\n      <GetTable update={updateData} data={filter(data)} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Update_QP_QR\\GetTable.js",["204","205","206"],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Form\\GetTable.js",[],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Form\\users_table.js",[],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Helper\\context.js",[],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Upload_file\\upload.js",[],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Logout_Header\\logout.js",[],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Traceability Table\\Interface.js",[],"C:\\Users\\pc\\Desktop\\PMI PFA\\PMIndustries\\client\\src\\Components\\Traceability Table\\Form.js",["207"],{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","severity":1,"message":"213","line":9,"column":11,"nodeType":"214","messageId":"215","endLine":9,"endColumn":18},{"ruleId":"212","severity":1,"message":"216","line":10,"column":11,"nodeType":"214","messageId":"215","endLine":10,"endColumn":19},{"ruleId":"212","severity":1,"message":"217","line":1,"column":20,"nodeType":"214","messageId":"215","endLine":1,"endColumn":24},{"ruleId":"212","severity":1,"message":"218","line":3,"column":25,"nodeType":"214","messageId":"215","endLine":3,"endColumn":30},{"ruleId":"208","replacedBy":"219"},{"ruleId":"210","replacedBy":"220"},{"ruleId":"212","severity":1,"message":"221","line":2,"column":8,"nodeType":"214","messageId":"215","endLine":2,"endColumn":16},{"ruleId":"212","severity":1,"message":"222","line":3,"column":8,"nodeType":"214","messageId":"215","endLine":3,"endColumn":14},{"ruleId":"212","severity":1,"message":"223","line":1,"column":10,"nodeType":"214","messageId":"215","endLine":1,"endColumn":19},{"ruleId":"212","severity":1,"message":"224","line":1,"column":21,"nodeType":"214","messageId":"215","endLine":1,"endColumn":29},{"ruleId":"212","severity":1,"message":"225","line":2,"column":8,"nodeType":"214","messageId":"215","endLine":2,"endColumn":13},{"ruleId":"212","severity":1,"message":"226","line":14,"column":21,"nodeType":"214","messageId":"215","endLine":14,"endColumn":32},{"ruleId":"212","severity":1,"message":"221","line":2,"column":8,"nodeType":"214","messageId":"215","endLine":2,"endColumn":16},{"ruleId":"212","severity":1,"message":"222","line":3,"column":8,"nodeType":"214","messageId":"215","endLine":3,"endColumn":14},{"ruleId":"212","severity":1,"message":"226","line":15,"column":21,"nodeType":"214","messageId":"215","endLine":15,"endColumn":32},{"ruleId":"212","severity":1,"message":"223","line":1,"column":10,"nodeType":"214","messageId":"215","endLine":1,"endColumn":19},{"ruleId":"212","severity":1,"message":"224","line":1,"column":21,"nodeType":"214","messageId":"215","endLine":1,"endColumn":29},{"ruleId":"212","severity":1,"message":"225","line":2,"column":8,"nodeType":"214","messageId":"215","endLine":2,"endColumn":13},{"ruleId":"212","severity":1,"message":"221","line":2,"column":8,"nodeType":"214","messageId":"215","endLine":2,"endColumn":16},{"ruleId":"212","severity":1,"message":"222","line":3,"column":8,"nodeType":"214","messageId":"215","endLine":3,"endColumn":14},{"ruleId":"212","severity":1,"message":"223","line":1,"column":10,"nodeType":"214","messageId":"215","endLine":1,"endColumn":19},{"ruleId":"212","severity":1,"message":"224","line":1,"column":21,"nodeType":"214","messageId":"215","endLine":1,"endColumn":29},{"ruleId":"212","severity":1,"message":"225","line":2,"column":8,"nodeType":"214","messageId":"215","endLine":2,"endColumn":13},{"ruleId":"212","severity":1,"message":"226","line":15,"column":21,"nodeType":"214","messageId":"215","endLine":15,"endColumn":32},{"ruleId":"212","severity":1,"message":"221","line":2,"column":8,"nodeType":"214","messageId":"215","endLine":2,"endColumn":16},{"ruleId":"212","severity":1,"message":"222","line":3,"column":8,"nodeType":"214","messageId":"215","endLine":3,"endColumn":14},{"ruleId":"212","severity":1,"message":"226","line":14,"column":21,"nodeType":"214","messageId":"215","endLine":14,"endColumn":32},{"ruleId":"212","severity":1,"message":"223","line":1,"column":10,"nodeType":"214","messageId":"215","endLine":1,"endColumn":19},{"ruleId":"212","severity":1,"message":"224","line":1,"column":21,"nodeType":"214","messageId":"215","endLine":1,"endColumn":29},{"ruleId":"212","severity":1,"message":"225","line":2,"column":8,"nodeType":"214","messageId":"215","endLine":2,"endColumn":13},{"ruleId":"212","severity":1,"message":"221","line":2,"column":8,"nodeType":"214","messageId":"215","endLine":2,"endColumn":16},{"ruleId":"212","severity":1,"message":"222","line":3,"column":8,"nodeType":"214","messageId":"215","endLine":3,"endColumn":14},{"ruleId":"212","severity":1,"message":"226","line":14,"column":21,"nodeType":"214","messageId":"215","endLine":14,"endColumn":32},{"ruleId":"212","severity":1,"message":"223","line":1,"column":10,"nodeType":"214","messageId":"215","endLine":1,"endColumn":19},{"ruleId":"212","severity":1,"message":"224","line":1,"column":21,"nodeType":"214","messageId":"215","endLine":1,"endColumn":29},{"ruleId":"212","severity":1,"message":"225","line":2,"column":8,"nodeType":"214","messageId":"215","endLine":2,"endColumn":13},{"ruleId":"208","replacedBy":"227"},{"ruleId":"210","replacedBy":"228"},{"ruleId":"212","severity":1,"message":"221","line":2,"column":8,"nodeType":"214","messageId":"215","endLine":2,"endColumn":16},{"ruleId":"212","severity":1,"message":"222","line":3,"column":8,"nodeType":"214","messageId":"215","endLine":3,"endColumn":14},{"ruleId":"212","severity":1,"message":"226","line":14,"column":21,"nodeType":"214","messageId":"215","endLine":14,"endColumn":32},{"ruleId":"212","severity":1,"message":"223","line":1,"column":10,"nodeType":"214","messageId":"215","endLine":1,"endColumn":19},{"ruleId":"212","severity":1,"message":"224","line":1,"column":21,"nodeType":"214","messageId":"215","endLine":1,"endColumn":29},{"ruleId":"212","severity":1,"message":"225","line":2,"column":8,"nodeType":"214","messageId":"215","endLine":2,"endColumn":13},{"ruleId":"212","severity":1,"message":"229","line":4,"column":3,"nodeType":"214","messageId":"215","endLine":4,"endColumn":21},"no-native-reassign",["230"],"no-negated-in-lhs",["231"],"no-unused-vars","'logedIn' is assigned a value but never used.","Identifier","unusedVar","'userData' is assigned a value but never used.","'Rout' is defined but never used.","'Route' is defined but never used.",["230"],["231"],"'GetTable' is defined but never used.","'Navbar' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Axios' is defined but never used.","'setUserData' is assigned a value but never used.",["230"],["231"],"'DownloadTableExcel' is defined but never used.","no-global-assign","no-unsafe-negation"]